# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  go-executor:
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/go:1.18
    working_directory: /home/circleci/go/src/github.com/solarwindscloud/terraform-provider-swo
    environment:
      GOPRIVATE: github.com/solarwindscloud
      GOLANGCI_LINT_VERSION: 1.51.0

# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    executor: go-executor

    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Use GITHUB_TOKEN for git requests
          command: |
            git config --global url."https://${GITHUB_TOKEN}:@github.com/".insteadOf "https://github.com/"
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Verify Modules
          command: |
            dirs=`find . -name go.mod -exec dirname {} \;`
            set -e
            for i in $dirs; do \
              pushd $i; \
              go vet ./...; \
              go mod verify; \
              go build ./...; \
              popd; \
            done
      - run:
          name: Run golangci-lint
          command: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
              | sh -s -- -b $(go env GOPATH)/bin v${GOLANGCI_LINT_VERSION}
            golangci-lint run
      # - run:
      #     name: Run Unit Tests
      #     command: |
      #       dirs=`find . -name go.mod -exec dirname {} \;`
      #       set -e
      #       mkdir -p ~/test-results/
      #       for i in $dirs; do \
      #         pushd $i; \
      #         go test -coverprofile coverage.out -covermode atomic ./...; \
      #         html="$i-coverage.html"
      #         html=`echo $html | sed 's/\//_/g' | sed 's/-/_/g'`
      #         go tool cover -html=coverage.out -o $html
      #         mv $html ~/test-results/
      #         popd; \
      #       done
      # - store_test_results:
      #     path: ~/test-results/
      # - store_artifacts:
      #     path: ~/test-results/ 

# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  build:
    jobs:
      - build:
          context:
            - org-global
            - GH_LIBRATO_CI_REPO
    