// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type AlertActionInput struct {
	// Type of a notification service
	Type string `json:"type"`
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
}

// GetType returns AlertActionInput.Type, and is useful for accessing the field via an interface.
func (v *AlertActionInput) GetType() string { return v.Type }

// GetConfigurationIds returns AlertActionInput.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *AlertActionInput) GetConfigurationIds() []string { return v.ConfigurationIds }

type AlertConditionMatchFieldRuleInput struct {
	// Field name to apply filtering rule on
	FieldName string `json:"fieldName"`
	// Rules to apply - multiple rules are joined by `OR`
	Rules []AlertConditionMatchRuleInput `json:"rules"`
}

// GetFieldName returns AlertConditionMatchFieldRuleInput.FieldName, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchFieldRuleInput) GetFieldName() string { return v.FieldName }

// GetRules returns AlertConditionMatchFieldRuleInput.Rules, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchFieldRuleInput) GetRules() []AlertConditionMatchRuleInput { return v.Rules }

type AlertConditionMatchRuleInput struct {
	Type AlertConditionMatchRuleType `json:"type"`
	// Negate match (wraps in `NOT`)
	Negate bool `json:"negate"`
	// Value match match
	Value string `json:"value"`
}

// GetType returns AlertConditionMatchRuleInput.Type, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetType() AlertConditionMatchRuleType { return v.Type }

// GetNegate returns AlertConditionMatchRuleInput.Negate, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetNegate() bool { return v.Negate }

// GetValue returns AlertConditionMatchRuleInput.Value, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetValue() string { return v.Value }

// Alert definition condition matching rule types
type AlertConditionMatchRuleType string

const (
	AlertConditionMatchRuleTypeEq       AlertConditionMatchRuleType = "EQ"
	AlertConditionMatchRuleTypeNe       AlertConditionMatchRuleType = "NE"
	AlertConditionMatchRuleTypeContains AlertConditionMatchRuleType = "CONTAINS"
	AlertConditionMatchRuleTypeMatches  AlertConditionMatchRuleType = "MATCHES"
)

type AlertConditionNodeEntityFilterInput struct {
	// **DEPRECATED:** Use the `types` field instead
	Type string `json:"type"`
	// Filter by Entity types
	Types []string `json:"types"`
	// Filter by Entity IDs
	Ids []string `json:"ids"`
	// Contextual (smart) search query
	Query *string `json:"query"`
	// Filter by Entity fields - multiple fields are joined by `AND`
	Fields []AlertConditionMatchFieldRuleInput `json:"fields"`
}

// GetType returns AlertConditionNodeEntityFilterInput.Type, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetType() string { return v.Type }

// GetTypes returns AlertConditionNodeEntityFilterInput.Types, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetTypes() []string { return v.Types }

// GetIds returns AlertConditionNodeEntityFilterInput.Ids, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetIds() []string { return v.Ids }

// GetQuery returns AlertConditionNodeEntityFilterInput.Query, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetQuery() *string { return v.Query }

// GetFields returns AlertConditionNodeEntityFilterInput.Fields, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetFields() []AlertConditionMatchFieldRuleInput {
	return v.Fields
}

// See [docs](https://github.com/solarwindscloud/nighthawk-alerting/blob/develop/docs/how-to-build-condition.md) on how to work with condition nodes.
type AlertConditionNodeInput struct {
	// Condition node ID.
	Id int `json:"id"`
	// Node (operator) type. Supported values:
	// - `aggregationOperator` (child of `binaryOperator`)
	// - `binaryOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	// - `constantValue` (root, or child of `aggregationOperator`, `binaryOperator`)
	// - `logicalOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	// - `metricField` (child of `binaryOperator`, `aggregationOperator`)
	// - `queryField` (child of `aggregationOperator`)
	// - `unaryOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	Type string `json:"type"`
	// Operator for combining operands. Supported values:
	// - For aggregationOperator: `COUNT`, `MIN`, `MAX`, `AVG`, `SUM`, `LAST`
	// - For binaryOperator: `=`, `!=`, `>`, `<`, `>=`, `<=`
	// - For logicalOperator: `AND`, `OR`
	// - For unaryOperator: `!`
	Operator *string `json:"operator"`
	// Ordered list of child condition nodes IDs.
	OperandIds []int `json:"operandIds"`
	// Entity filter for `metricField` nodes, when defined (not null) metric is scoped to entity
	EntityFilter *AlertConditionNodeEntityFilterInput `json:"entityFilter"`
	// Measurement filter for metric tags
	MetricFilter *AlertFilterExpressionInput `json:"metricFilter"`
	// Entity metric field for `metricField` nodes
	FieldName *string `json:"fieldName"`
	// Data type for `constantValue` nodes. Supported values: `boolean`, `number`, `string`
	DataType *string `json:"dataType"`
	// String representation of value for `constantValue` nodes.
	Value *string `json:"value"`
	// Source specification for `queryField` nodes.
	Source *string `json:"source"`
	// Query specification for `queryField` nodes.
	Query *string `json:"query"`
}

// GetId returns AlertConditionNodeInput.Id, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetId() int { return v.Id }

// GetType returns AlertConditionNodeInput.Type, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetType() string { return v.Type }

// GetOperator returns AlertConditionNodeInput.Operator, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetOperator() *string { return v.Operator }

// GetOperandIds returns AlertConditionNodeInput.OperandIds, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetOperandIds() []int { return v.OperandIds }

// GetEntityFilter returns AlertConditionNodeInput.EntityFilter, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetEntityFilter() *AlertConditionNodeEntityFilterInput {
	return v.EntityFilter
}

// GetMetricFilter returns AlertConditionNodeInput.MetricFilter, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetMetricFilter() *AlertFilterExpressionInput {
	return v.MetricFilter
}

// GetFieldName returns AlertConditionNodeInput.FieldName, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetFieldName() *string { return v.FieldName }

// GetDataType returns AlertConditionNodeInput.DataType, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetDataType() *string { return v.DataType }

// GetValue returns AlertConditionNodeInput.Value, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetValue() *string { return v.Value }

// GetSource returns AlertConditionNodeInput.Source, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetSource() *string { return v.Source }

// GetQuery returns AlertConditionNodeInput.Query, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetQuery() *string { return v.Query }

type AlertDefinitionInput struct {
	// Alert definition name
	Name string `json:"name"`
	// Alert definition description
	Description *string `json:"description"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	Condition []AlertConditionNodeInput `json:"condition"`
	// List of alert actions that shall be triggered in case of alert **FIRING**
	Actions []AlertActionInput `json:"actions"`
	// A flag indicating whether to send a notification when active alert returns to normal.
	// It will be set to *false* if not specified.
	TriggerResetActions *bool `json:"triggerResetActions"`
}

// GetName returns AlertDefinitionInput.Name, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetName() string { return v.Name }

// GetDescription returns AlertDefinitionInput.Description, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetDescription() *string { return v.Description }

// GetSeverity returns AlertDefinitionInput.Severity, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetSeverity() AlertSeverity { return v.Severity }

// GetEnabled returns AlertDefinitionInput.Enabled, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetEnabled() bool { return v.Enabled }

// GetCondition returns AlertDefinitionInput.Condition, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetCondition() []AlertConditionNodeInput { return v.Condition }

// GetActions returns AlertDefinitionInput.Actions, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetActions() []AlertActionInput { return v.Actions }

// GetTriggerResetActions returns AlertDefinitionInput.TriggerResetActions, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetTriggerResetActions() *bool { return v.TriggerResetActions }

// Input type for filtering
type AlertFilterExpressionInput struct {
	// Name of the property to filter on.
	PropertyName *string `json:"propertyName"`
	// Value of the property for operations that expect single value such as EQ, NE, GT, ...
	PropertyValue *string `json:"propertyValue"`
	// Values of the property for operations expecting multiple values, such as IN.
	PropertyValues []*string `json:"propertyValues"`
	// Operation to use for the evaluation. Default: "EQ"
	Operation FilterOperation `json:"operation"`
	// Children filters in case of "operator" being one of "OR", "AND", "NOT".
	// In such case the "propertyName" and "propertyValue" are ignored.
	Children []AlertFilterExpressionInput `json:"children"`
}

// GetPropertyName returns AlertFilterExpressionInput.PropertyName, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyName() *string { return v.PropertyName }

// GetPropertyValue returns AlertFilterExpressionInput.PropertyValue, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyValue() *string { return v.PropertyValue }

// GetPropertyValues returns AlertFilterExpressionInput.PropertyValues, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyValues() []*string { return v.PropertyValues }

// GetOperation returns AlertFilterExpressionInput.Operation, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetOperation() FilterOperation { return v.Operation }

// GetChildren returns AlertFilterExpressionInput.Children, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetChildren() []AlertFilterExpressionInput { return v.Children }

type AlertFilterInput struct {
	// By Alert definition ID
	Id *string `json:"id"`
	// By user ID
	UserId *string `json:"userId"`
	// By Alert definition name
	Name *string `json:"name"`
	// By list of Alert definition severities
	Severities []AlertSeverity `json:"severities"`
	// By Alert definition enablement
	Enabled *bool `json:"enabled"`
	// By trigger status
	Triggered *bool `json:"triggered"`
	// By list of Entity IDs
	Entities []string `json:"entities"`
	// By list of Entity types
	EntityTypes []string `json:"entityTypes"`
	// By alert filter expression
	Filter *AlertFilterExpressionInput `json:"filter"`
	// By action configuration ID
	ActionConfigurationId *string `json:"actionConfigurationId"`
	// By list of condition types
	ConditionTypes []ConditionType `json:"conditionTypes"`
}

// GetId returns AlertFilterInput.Id, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetId() *string { return v.Id }

// GetUserId returns AlertFilterInput.UserId, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetUserId() *string { return v.UserId }

// GetName returns AlertFilterInput.Name, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetName() *string { return v.Name }

// GetSeverities returns AlertFilterInput.Severities, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetSeverities() []AlertSeverity { return v.Severities }

// GetEnabled returns AlertFilterInput.Enabled, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEnabled() *bool { return v.Enabled }

// GetTriggered returns AlertFilterInput.Triggered, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetTriggered() *bool { return v.Triggered }

// GetEntities returns AlertFilterInput.Entities, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEntities() []string { return v.Entities }

// GetEntityTypes returns AlertFilterInput.EntityTypes, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEntityTypes() []string { return v.EntityTypes }

// GetFilter returns AlertFilterInput.Filter, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetFilter() *AlertFilterExpressionInput { return v.Filter }

// GetActionConfigurationId returns AlertFilterInput.ActionConfigurationId, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetActionConfigurationId() *string { return v.ActionConfigurationId }

// GetConditionTypes returns AlertFilterInput.ConditionTypes, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetConditionTypes() []ConditionType { return v.ConditionTypes }

// Alert Definition severities
type AlertSeverity string

const (
	AlertSeverityInfo     AlertSeverity = "INFO"
	AlertSeverityWarning  AlertSeverity = "WARNING"
	AlertSeverityCritical AlertSeverity = "CRITICAL"
)

// Alert definition condition types
type ConditionType string

const (
	ConditionTypeEntityMetric     ConditionType = "ENTITY_METRIC"
	ConditionTypeStandaloneMetric ConditionType = "STANDALONE_METRIC"
	ConditionTypeLogQuery         ConditionType = "LOG_QUERY"
	ConditionTypeUnknown          ConditionType = "UNKNOWN"
)

// CreateAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type CreateAlertDefinitionAlertMutations struct {
	// Creates a new Alert definition and returns it on success, or null on error.
	// Requires JWT payload (*x-jwt-verified* header) with `org_id` claim containing Organization ID.
	CreateAlertDefinition *CreateAlertDefinitionAlertMutationsCreateAlertDefinition `json:"createAlertDefinition"`
}

// GetCreateAlertDefinition returns CreateAlertDefinitionAlertMutations.CreateAlertDefinition, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutations) GetCreateAlertDefinition() *CreateAlertDefinitionAlertMutationsCreateAlertDefinition {
	return v.CreateAlertDefinition
}

// CreateAlertDefinitionAlertMutationsCreateAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
type CreateAlertDefinitionAlertMutationsCreateAlertDefinition struct {
	// List of alert actions that shall be triggered in case of alert FIRING
	Actions []CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction `json:"actions"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	FlatCondition []CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description
	Description *string `json:"description"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Alert definition ID in UUID format
	Id string `json:"id"`
	// Alert definition name
	Name string `json:"name"`
	// Organization ID
	OrganizationId string `json:"organizationId"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
}

// GetActions returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetActions() []CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetFlatCondition returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetFlatCondition() []CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetId() string { return v.Id }

// GetName returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetName() string { return v.Name }

// GetOrganizationId returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
type CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction struct {
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
	// Type of a notification service
	Type string `json:"type"`
}

// GetConfigurationIds returns CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
}

// GetId returns CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// CreateAlertDefinitionResponse is returned by CreateAlertDefinition on success.
type CreateAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations CreateAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns CreateAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionResponse) GetAlertMutations() CreateAlertDefinitionAlertMutations {
	return v.AlertMutations
}

// DeleteAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type DeleteAlertDefinitionAlertMutations struct {
	// Deletes an Alert definition by ID and returns the ID on success, or null when no such Alert definition exists.
	// Requires JWT payload (*x-jwt-verified* header) with `org_id` claim containing Organization ID.
	DeleteAlertDefinition *string `json:"deleteAlertDefinition"`
}

// GetDeleteAlertDefinition returns DeleteAlertDefinitionAlertMutations.DeleteAlertDefinition, and is useful for accessing the field via an interface.
func (v *DeleteAlertDefinitionAlertMutations) GetDeleteAlertDefinition() *string {
	return v.DeleteAlertDefinition
}

// DeleteAlertDefinitionResponse is returned by DeleteAlertDefinition on success.
type DeleteAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations DeleteAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns DeleteAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *DeleteAlertDefinitionResponse) GetAlertMutations() DeleteAlertDefinitionAlertMutations {
	return v.AlertMutations
}

// Allowed entity filtering operators
type FilterOperation string

const (
	FilterOperationEq       FilterOperation = "EQ"
	FilterOperationNe       FilterOperation = "NE"
	FilterOperationGt       FilterOperation = "GT"
	FilterOperationGe       FilterOperation = "GE"
	FilterOperationLt       FilterOperation = "LT"
	FilterOperationLe       FilterOperation = "LE"
	FilterOperationContains FilterOperation = "CONTAINS"
	FilterOperationMatches  FilterOperation = "MATCHES"
	FilterOperationIn       FilterOperation = "IN"
	FilterOperationAnd      FilterOperation = "AND"
	FilterOperationOr       FilterOperation = "OR"
	FilterOperationNot      FilterOperation = "NOT"
	FilterOperationExists   FilterOperation = "EXISTS"
)

// GetAlertDefinitionsAlertQueries includes the requested fields of the GraphQL type AlertQueries.
type GetAlertDefinitionsAlertQueries struct {
	// Returns all Alert definitions with given Filter, Paging and Sorting.
	// Filtering can be performed either using dedicated fields in the `filter` input, or using a generic `filter.filter`
	// field. The latter one can be also used to filter Alert definitions with no configured actions/condition evaluations
	// using `propertyName: "actions:`/`propertyName: "conditionEvaluations"` and 'operation: EXISTS'.
	// Requires JWT payload (*x-jwt-verified* header) with `org_id` claim containing Organization ID.
	AlertDefinitions GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult `json:"alertDefinitions"`
}

// GetAlertDefinitions returns GetAlertDefinitionsAlertQueries.AlertDefinitions, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueries) GetAlertDefinitions() GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult {
	return v.AlertDefinitions
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult includes the requested fields of the GraphQL type AlertDefinitionsResult.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult struct {
	// List of Alert definitions
	AlertDefinitions []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition `json:"alertDefinitions"`
}

// GetAlertDefinitions returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult.AlertDefinitions, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult) GetAlertDefinitions() []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition {
	return v.AlertDefinitions
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition struct {
	// List of alert actions that shall be triggered in case of alert FIRING
	Actions []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction `json:"actions"`
	// A flag indicating whether to send a notification when active alert returns to normal.
	TriggerResetActions bool `json:"triggerResetActions"`
	// Alert definition condition type
	ConditionType ConditionType `json:"conditionType"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	FlatCondition []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description
	Description *string `json:"description"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Alert definition ID in UUID format
	Id string `json:"id"`
	// Alert definition name
	Name string `json:"name"`
	// Organization ID
	OrganizationId string `json:"organizationId"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
	// Indication whether alert is triggered
	Triggered bool `json:"triggered"`
	// Time when the Alert definition was triggered in ISO-8601 date format (e.g. `2011-12-03T10:15:30Z`)
	TriggeredTime *string `json:"triggeredTime"`
	// List of targeted Entity types
	TargetEntityTypes []string `json:"targetEntityTypes"`
	// Information about any pending mutes on the Alert definition
	MuteInfo GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo `json:"muteInfo"`
	// User ID
	UserId string `json:"userId"`
}

// GetActions returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetActions() []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetTriggerResetActions returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TriggerResetActions, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggerResetActions() bool {
	return v.TriggerResetActions
}

// GetConditionType returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.ConditionType, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetConditionType() ConditionType {
	return v.ConditionType
}

// GetFlatCondition returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetFlatCondition() []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetId() string {
	return v.Id
}

// GetName returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetName() string {
	return v.Name
}

// GetOrganizationId returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// GetTriggered returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Triggered, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggered() bool {
	return v.Triggered
}

// GetTriggeredTime returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TriggeredTime, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggeredTime() *string {
	return v.TriggeredTime
}

// GetTargetEntityTypes returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TargetEntityTypes, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTargetEntityTypes() []string {
	return v.TargetEntityTypes
}

// GetMuteInfo returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.MuteInfo, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetMuteInfo() GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo {
	return v.MuteInfo
}

// GetUserId returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.UserId, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetUserId() string {
	return v.UserId
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction struct {
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
	// Type of a notification service
	Type string `json:"type"`
}

// GetConfigurationIds returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
	// List of named child condition node IDs.
	Links []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks `json:"links"`
	// Ordered list of expression nodes representing the flatten tree.
	// The first item is the tree root with named links using `operands`.
	Value *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode `json:"value"`
}

// GetId returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// GetLinks returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Links, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetLinks() []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks {
	return v.Links
}

// GetValue returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Value, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetValue() *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode {
	return v.Value
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks includes the requested fields of the GraphQL type NamedLinks.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks struct {
	// Name of the link
	Name string `json:"name"`
	// List of linked node IDs
	Values []string `json:"values"`
}

// GetName returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Name, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetName() string {
	return v.Name
}

// GetValues returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Values, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetValues() []string {
	return v.Values
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode includes the requested fields of the GraphQL type FlatAlertConditionNode.
// The GraphQL type's documentation follows.
//
// See https://swicloud.atlassian.net/wiki/spaces/NIT/pages/2700936948/Data+Format+for+storing+alerts.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode struct {
	// Entity metric field for `metricField` nodes
	FieldName *string `json:"fieldName"`
	// Operator for combining operands. Supported values:
	// - For aggregationOperator: `COUNT`, `MIN`, `MAX`, `AVG`, `SUM`, `LAST`
	// - For binaryOperator: `=`, `!=`, `>`, `<`, `>=`, `<=`
	// - For logicalOperator: `AND`, `OR`
	// - For unaryOperator: `!`
	Operator *string `json:"operator"`
	// Node (operator) type. Supported values:
	// - `aggregationOperator` (child of `binaryOperator`)
	// - `binaryOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	// - `constantValue` (root, or child of `aggregationOperator`, `binaryOperator`)
	// - `logicalOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	// - `metricField` (child of `binaryOperator`, `aggregationOperator`)
	// - `queryField` (child of `aggregationOperator`)
	// - `unaryOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	Type string `json:"type"`
	// Query specification for `queryField` nodes.
	Query *string `json:"query"`
}

// GetFieldName returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.FieldName, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetFieldName() *string {
	return v.FieldName
}

// GetOperator returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Operator, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetOperator() *string {
	return v.Operator
}

// GetType returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Type, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetType() string {
	return v.Type
}

// GetQuery returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Query, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetQuery() *string {
	return v.Query
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo includes the requested fields of the GraphQL type AlertDefinitionMuteInfo.
// The GraphQL type's documentation follows.
//
// Alert definitions can be muted for certain period of time or muted until resolved.
//
// If the muted is set to *true* and until attribute is not set meaning no notification will be sent until
// all of the evaluations are set to **OK** state or alert definition is reset
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo struct {
	// When muted no notifications are sent
	Muted bool `json:"muted"`
	// Time until the mute expires in ISO-8601 date format - `2011-12-03T10:15:30Z` or `null` - muted until resolved
	Until *string `json:"until"`
}

// GetMuted returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo.Muted, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo) GetMuted() bool {
	return v.Muted
}

// GetUntil returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo.Until, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo) GetUntil() *string {
	return v.Until
}

// GetAlertDefinitionsResponse is returned by GetAlertDefinitions on success.
type GetAlertDefinitionsResponse struct {
	// Queries related to Alerting.
	AlertQueries GetAlertDefinitionsAlertQueries `json:"alertQueries"`
}

// GetAlertQueries returns GetAlertDefinitionsResponse.AlertQueries, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsResponse) GetAlertQueries() GetAlertDefinitionsAlertQueries {
	return v.AlertQueries
}

// Paging input for paginated queries. If not specified the first page of the results is returned and it will contain
// up to X items where X is a value configured in the system.
type PagingInput struct {
	// Fetch items that exist before this cursor. Cursor can be obtained from PageInfo data returned in previous query.
	Before *string `json:"before"`
	// Fetch items that exist after this cursor. Cursor can be obtained from PageInfo data returned in previous query.
	After *string `json:"after"`
	// Get first X items from the result. This value can be used alone or in combination with "after".
	// Other combinations are invalid and will lead to query error.
	First *int `json:"first"`
	// Get last X items from the result. This value can be used alone or in combination with "before".
	// Other combinations are invalid and will lead to query error.
	Last *int `json:"last"`
}

// GetBefore returns PagingInput.Before, and is useful for accessing the field via an interface.
func (v *PagingInput) GetBefore() *string { return v.Before }

// GetAfter returns PagingInput.After, and is useful for accessing the field via an interface.
func (v *PagingInput) GetAfter() *string { return v.After }

// GetFirst returns PagingInput.First, and is useful for accessing the field via an interface.
func (v *PagingInput) GetFirst() *int { return v.First }

// GetLast returns PagingInput.Last, and is useful for accessing the field via an interface.
func (v *PagingInput) GetLast() *int { return v.Last }

// Sort direction for query result sorting
type SortDirection string

const (
	SortDirectionAsc  SortDirection = "ASC"
	SortDirectionDesc SortDirection = "DESC"
)

// Query sort definition. Sort support multiple properties and two sort directions.
type SortInput struct {
	Sorts []SortItemInput `json:"sorts"`
}

// GetSorts returns SortInput.Sorts, and is useful for accessing the field via an interface.
func (v *SortInput) GetSorts() []SortItemInput { return v.Sorts }

// Single property sort definition.
type SortItemInput struct {
	PropertyName string         `json:"propertyName"`
	Direction    *SortDirection `json:"direction"`
}

// GetPropertyName returns SortItemInput.PropertyName, and is useful for accessing the field via an interface.
func (v *SortItemInput) GetPropertyName() string { return v.PropertyName }

// GetDirection returns SortItemInput.Direction, and is useful for accessing the field via an interface.
func (v *SortItemInput) GetDirection() *SortDirection { return v.Direction }

// UpdateAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type UpdateAlertDefinitionAlertMutations struct {
	// Updates an Alert definition by ID and returns the alert on success, or null when no such Alert definition exists.
	// Requires JWT payload (*x-jwt-verified* header) with `org_id` claim containing Organization ID.
	UpdateAlertDefinition *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition `json:"updateAlertDefinition"`
}

// GetUpdateAlertDefinition returns UpdateAlertDefinitionAlertMutations.UpdateAlertDefinition, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutations) GetUpdateAlertDefinition() *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition {
	return v.UpdateAlertDefinition
}

// UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
type UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition struct {
	// List of alert actions that shall be triggered in case of alert FIRING
	Actions []UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction `json:"actions"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	FlatCondition []UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description
	Description *string `json:"description"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Alert definition ID in UUID format
	Id string `json:"id"`
	// Information about any pending mutes on the Alert definition
	MuteInfo UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo `json:"muteInfo"`
	// Alert definition name
	Name string `json:"name"`
	// Organization ID
	OrganizationId string `json:"organizationId"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
	// Indication whether alert is triggered
	Triggered bool `json:"triggered"`
	// Time when the Alert definition was triggered in ISO-8601 date format (e.g. `2011-12-03T10:15:30Z`)
	TriggeredTime *string `json:"triggeredTime"`
	// List of targeted Entity types
	TargetEntityTypes []string `json:"targetEntityTypes"`
	// User ID
	UserId string `json:"userId"`
}

// GetActions returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetActions() []UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetFlatCondition returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetFlatCondition() []UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetId() string { return v.Id }

// GetMuteInfo returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.MuteInfo, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetMuteInfo() UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo {
	return v.MuteInfo
}

// GetName returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetName() string { return v.Name }

// GetOrganizationId returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// GetTriggered returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Triggered, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTriggered() bool {
	return v.Triggered
}

// GetTriggeredTime returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.TriggeredTime, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTriggeredTime() *string {
	return v.TriggeredTime
}

// GetTargetEntityTypes returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.TargetEntityTypes, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTargetEntityTypes() []string {
	return v.TargetEntityTypes
}

// GetUserId returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.UserId, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetUserId() string {
	return v.UserId
}

// UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
type UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction struct {
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
	// Type of a notification service
	Type string `json:"type"`
}

// GetConfigurationIds returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
}

// GetId returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo includes the requested fields of the GraphQL type AlertDefinitionMuteInfo.
// The GraphQL type's documentation follows.
//
// Alert definitions can be muted for certain period of time or muted until resolved.
//
// If the muted is set to *true* and until attribute is not set meaning no notification will be sent until
// all of the evaluations are set to **OK** state or alert definition is reset
type UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo struct {
	// When muted no notifications are sent
	Muted bool `json:"muted"`
	// Time until the mute expires in ISO-8601 date format - `2011-12-03T10:15:30Z` or `null` - muted until resolved
	Until *string `json:"until"`
}

// GetMuted returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo.Muted, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo) GetMuted() bool {
	return v.Muted
}

// GetUntil returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo.Until, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo) GetUntil() *string {
	return v.Until
}

// UpdateAlertDefinitionResponse is returned by UpdateAlertDefinition on success.
type UpdateAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations UpdateAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns UpdateAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionResponse) GetAlertMutations() UpdateAlertDefinitionAlertMutations {
	return v.AlertMutations
}

// __CreateAlertDefinitionInput is used internally by genqlient
type __CreateAlertDefinitionInput struct {
	Definition AlertDefinitionInput `json:"definition"`
}

// GetDefinition returns __CreateAlertDefinitionInput.Definition, and is useful for accessing the field via an interface.
func (v *__CreateAlertDefinitionInput) GetDefinition() AlertDefinitionInput { return v.Definition }

// __DeleteAlertDefinitionInput is used internally by genqlient
type __DeleteAlertDefinitionInput struct {
	DeleteAlertDefinitionId string `json:"deleteAlertDefinitionId"`
}

// GetDeleteAlertDefinitionId returns __DeleteAlertDefinitionInput.DeleteAlertDefinitionId, and is useful for accessing the field via an interface.
func (v *__DeleteAlertDefinitionInput) GetDeleteAlertDefinitionId() string {
	return v.DeleteAlertDefinitionId
}

// __GetAlertDefinitionsInput is used internally by genqlient
type __GetAlertDefinitionsInput struct {
	Filter AlertFilterInput `json:"filter"`
	Paging *PagingInput     `json:"paging"`
	SortBy *SortInput       `json:"sortBy"`
}

// GetFilter returns __GetAlertDefinitionsInput.Filter, and is useful for accessing the field via an interface.
func (v *__GetAlertDefinitionsInput) GetFilter() AlertFilterInput { return v.Filter }

// GetPaging returns __GetAlertDefinitionsInput.Paging, and is useful for accessing the field via an interface.
func (v *__GetAlertDefinitionsInput) GetPaging() *PagingInput { return v.Paging }

// GetSortBy returns __GetAlertDefinitionsInput.SortBy, and is useful for accessing the field via an interface.
func (v *__GetAlertDefinitionsInput) GetSortBy() *SortInput { return v.SortBy }

// __UpdateAlertDefinitionInput is used internally by genqlient
type __UpdateAlertDefinitionInput struct {
	Definition              AlertDefinitionInput `json:"definition"`
	UpdateAlertDefinitionId string               `json:"updateAlertDefinitionId"`
}

// GetDefinition returns __UpdateAlertDefinitionInput.Definition, and is useful for accessing the field via an interface.
func (v *__UpdateAlertDefinitionInput) GetDefinition() AlertDefinitionInput { return v.Definition }

// GetUpdateAlertDefinitionId returns __UpdateAlertDefinitionInput.UpdateAlertDefinitionId, and is useful for accessing the field via an interface.
func (v *__UpdateAlertDefinitionInput) GetUpdateAlertDefinitionId() string {
	return v.UpdateAlertDefinitionId
}

func CreateAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	definition AlertDefinitionInput,
) (*CreateAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "CreateAlertDefinition",
		Query: `
mutation CreateAlertDefinition ($definition: AlertDefinitionInput!) {
	alertMutations {
		createAlertDefinition(definition: $definition) {
			actions {
				configurationIds
				type
			}
			flatCondition {
				id
			}
			description
			enabled
			id
			name
			organizationId
			severity
		}
	}
}
`,
		Variables: &__CreateAlertDefinitionInput{
			Definition: definition,
		},
	}
	var err error

	var data CreateAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	deleteAlertDefinitionId string,
) (*DeleteAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteAlertDefinition",
		Query: `
mutation DeleteAlertDefinition ($deleteAlertDefinitionId: ID!) {
	alertMutations {
		deleteAlertDefinition(id: $deleteAlertDefinitionId)
	}
}
`,
		Variables: &__DeleteAlertDefinitionInput{
			DeleteAlertDefinitionId: deleteAlertDefinitionId,
		},
	}
	var err error

	var data DeleteAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetAlertDefinitions(
	ctx context.Context,
	client graphql.Client,
	filter AlertFilterInput,
	paging *PagingInput,
	sortBy *SortInput,
) (*GetAlertDefinitionsResponse, error) {
	req := &graphql.Request{
		OpName: "GetAlertDefinitions",
		Query: `
query GetAlertDefinitions ($filter: AlertFilterInput!, $paging: PagingInput, $sortBy: SortInput) {
	alertQueries {
		alertDefinitions(filter: $filter, paging: $paging, sortBy: $sortBy) {
			alertDefinitions {
				actions {
					configurationIds
					type
				}
				triggerResetActions
				conditionType
				flatCondition {
					id
					links {
						name
						values
					}
					value {
						fieldName
						operator
						type
						query
					}
				}
				description
				enabled
				id
				name
				organizationId
				severity
				triggered
				triggeredTime
				targetEntityTypes
				muteInfo {
					muted
					until
				}
				userId
			}
		}
	}
}
`,
		Variables: &__GetAlertDefinitionsInput{
			Filter: filter,
			Paging: paging,
			SortBy: sortBy,
		},
	}
	var err error

	var data GetAlertDefinitionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	definition AlertDefinitionInput,
	updateAlertDefinitionId string,
) (*UpdateAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateAlertDefinition",
		Query: `
mutation UpdateAlertDefinition ($definition: AlertDefinitionInput!, $updateAlertDefinitionId: ID!) {
	alertMutations {
		updateAlertDefinition(definition: $definition, id: $updateAlertDefinitionId) {
			actions {
				configurationIds
				type
			}
			flatCondition {
				id
			}
			description
			enabled
			id
			muteInfo {
				muted
				until
			}
			name
			organizationId
			severity
			triggered
			triggeredTime
			targetEntityTypes
			userId
		}
	}
}
`,
		Variables: &__UpdateAlertDefinitionInput{
			Definition:              definition,
			UpdateAlertDefinitionId: updateAlertDefinitionId,
		},
	}
	var err error

	var data UpdateAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
