// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

type AlertActionInput struct {
	// Type of a notification service
	Type string `json:"type"`
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
}

// GetType returns AlertActionInput.Type, and is useful for accessing the field via an interface.
func (v *AlertActionInput) GetType() string { return v.Type }

// GetConfigurationIds returns AlertActionInput.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *AlertActionInput) GetConfigurationIds() []string { return v.ConfigurationIds }

type AlertConditionMatchFieldRuleInput struct {
	// Field name to apply filtering rule on
	FieldName string `json:"fieldName"`
	// Rules to apply - multiple rules are joined by `OR`
	Rules []AlertConditionMatchRuleInput `json:"rules"`
}

// GetFieldName returns AlertConditionMatchFieldRuleInput.FieldName, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchFieldRuleInput) GetFieldName() string { return v.FieldName }

// GetRules returns AlertConditionMatchFieldRuleInput.Rules, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchFieldRuleInput) GetRules() []AlertConditionMatchRuleInput { return v.Rules }

type AlertConditionMatchRuleInput struct {
	Type AlertConditionMatchRuleType `json:"type"`
	// Negate match (wraps in `NOT`)
	Negate bool `json:"negate"`
	// Value match match
	Value string `json:"value"`
}

// GetType returns AlertConditionMatchRuleInput.Type, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetType() AlertConditionMatchRuleType { return v.Type }

// GetNegate returns AlertConditionMatchRuleInput.Negate, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetNegate() bool { return v.Negate }

// GetValue returns AlertConditionMatchRuleInput.Value, and is useful for accessing the field via an interface.
func (v *AlertConditionMatchRuleInput) GetValue() string { return v.Value }

// Alert definition condition matching rule types
type AlertConditionMatchRuleType string

const (
	AlertConditionMatchRuleTypeEq       AlertConditionMatchRuleType = "EQ"
	AlertConditionMatchRuleTypeNe       AlertConditionMatchRuleType = "NE"
	AlertConditionMatchRuleTypeContains AlertConditionMatchRuleType = "CONTAINS"
	AlertConditionMatchRuleTypeMatches  AlertConditionMatchRuleType = "MATCHES"
)

type AlertConditionNodeEntityFilterInput struct {
	// **DEPRECATED:** Use the `types` field instead
	Type string `json:"type"`
	// Filter by Entity types
	Types []string `json:"types"`
	// Filter by Entity IDs
	Ids []string `json:"ids"`
	// Contextual (smart) search query
	Query *string `json:"query"`
	// Filter by Entity fields - multiple fields are joined by `AND`
	Fields []AlertConditionMatchFieldRuleInput `json:"fields"`
}

// GetType returns AlertConditionNodeEntityFilterInput.Type, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetType() string { return v.Type }

// GetTypes returns AlertConditionNodeEntityFilterInput.Types, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetTypes() []string { return v.Types }

// GetIds returns AlertConditionNodeEntityFilterInput.Ids, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetIds() []string { return v.Ids }

// GetQuery returns AlertConditionNodeEntityFilterInput.Query, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetQuery() *string { return v.Query }

// GetFields returns AlertConditionNodeEntityFilterInput.Fields, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeEntityFilterInput) GetFields() []AlertConditionMatchFieldRuleInput {
	return v.Fields
}

// See [docs](https://github.com/solarwindscloud/nighthawk-alerting/blob/develop/docs/how-to-build-condition.md) on how to work with condition nodes.
type AlertConditionNodeInput struct {
	// Condition node ID.
	Id int `json:"id"`
	// Node (operator) type. Supported values:
	// - `aggregationOperator` (child of `binaryOperator`)
	// - `binaryOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	// - `constantValue` (root, or child of `aggregationOperator`, `binaryOperator`)
	// - `logicalOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	// - `metricField` (child of `binaryOperator`, `aggregationOperator`)
	// - `queryField` (child of `aggregationOperator`)
	// - `unaryOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	Type string `json:"type"`
	// Operator for combining operands. Supported values:
	// - For aggregationOperator: `COUNT`, `MIN`, `MAX`, `AVG`, `SUM`, `LAST`
	// - For binaryOperator: `=`, `!=`, `>`, `<`, `>=`, `<=`
	// - For logicalOperator: `AND`, `OR`
	// - For unaryOperator: `!`
	Operator *string `json:"operator"`
	// Ordered list of child condition nodes IDs.
	OperandIds []int `json:"operandIds"`
	// Entity filter for `metricField` and `queryField` nodes. When defined (not null), node is scoped to entity.
	EntityFilter *AlertConditionNodeEntityFilterInput `json:"entityFilter"`
	// Measurement filter for metric tags
	MetricFilter *AlertFilterExpressionInput `json:"metricFilter"`
	// Entity metric field for `metricField` nodes
	FieldName *string `json:"fieldName"`
	// Data type for `constantValue` nodes. Supported values: `boolean`, `number`, `string`
	DataType *string `json:"dataType"`
	// String representation of value for `constantValue` nodes.
	Value *string `json:"value"`
	// *DEPRECATED:* Field is deprecated, `source` is now defined by `namespace`.
	// Source specification for `queryField` nodes.
	Source *string `json:"source"`
	// Query specification for `queryField` nodes.
	Query *string `json:"query"`
	// Events/logs namespace (in Chainsaw) for `queryField` nodes.
	Namespace *string `json:"namespace"`
}

// GetId returns AlertConditionNodeInput.Id, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetId() int { return v.Id }

// GetType returns AlertConditionNodeInput.Type, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetType() string { return v.Type }

// GetOperator returns AlertConditionNodeInput.Operator, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetOperator() *string { return v.Operator }

// GetOperandIds returns AlertConditionNodeInput.OperandIds, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetOperandIds() []int { return v.OperandIds }

// GetEntityFilter returns AlertConditionNodeInput.EntityFilter, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetEntityFilter() *AlertConditionNodeEntityFilterInput {
	return v.EntityFilter
}

// GetMetricFilter returns AlertConditionNodeInput.MetricFilter, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetMetricFilter() *AlertFilterExpressionInput {
	return v.MetricFilter
}

// GetFieldName returns AlertConditionNodeInput.FieldName, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetFieldName() *string { return v.FieldName }

// GetDataType returns AlertConditionNodeInput.DataType, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetDataType() *string { return v.DataType }

// GetValue returns AlertConditionNodeInput.Value, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetValue() *string { return v.Value }

// GetSource returns AlertConditionNodeInput.Source, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetSource() *string { return v.Source }

// GetQuery returns AlertConditionNodeInput.Query, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetQuery() *string { return v.Query }

// GetNamespace returns AlertConditionNodeInput.Namespace, and is useful for accessing the field via an interface.
func (v *AlertConditionNodeInput) GetNamespace() *string { return v.Namespace }

type AlertDefinitionInput struct {
	// Alert definition name
	Name string `json:"name"`
	// Alert definition description
	Description *string `json:"description"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	Condition []AlertConditionNodeInput `json:"condition"`
	// List of alert actions that shall be triggered in case of alert **FIRING**
	Actions []AlertActionInput `json:"actions"`
	// A flag indicating whether to send a notification when active alert returns to normal.
	// It will be set to *false* if not specified.
	TriggerResetActions *bool `json:"triggerResetActions"`
}

// GetName returns AlertDefinitionInput.Name, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetName() string { return v.Name }

// GetDescription returns AlertDefinitionInput.Description, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetDescription() *string { return v.Description }

// GetSeverity returns AlertDefinitionInput.Severity, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetSeverity() AlertSeverity { return v.Severity }

// GetEnabled returns AlertDefinitionInput.Enabled, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetEnabled() bool { return v.Enabled }

// GetCondition returns AlertDefinitionInput.Condition, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetCondition() []AlertConditionNodeInput { return v.Condition }

// GetActions returns AlertDefinitionInput.Actions, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetActions() []AlertActionInput { return v.Actions }

// GetTriggerResetActions returns AlertDefinitionInput.TriggerResetActions, and is useful for accessing the field via an interface.
func (v *AlertDefinitionInput) GetTriggerResetActions() *bool { return v.TriggerResetActions }

// Input type for filtering
type AlertFilterExpressionInput struct {
	// Name of the property to filter on.
	PropertyName *string `json:"propertyName"`
	// Value of the property for operations that expect single value such as EQ, NE, GT, ...
	PropertyValue *string `json:"propertyValue"`
	// Values of the property for operations expecting multiple values, such as IN.
	PropertyValues []*string `json:"propertyValues"`
	// Operation to use for the evaluation. Default: "EQ"
	Operation FilterOperation `json:"operation"`
	// Children filters in case of "operator" being one of "OR", "AND", "NOT".
	// In such case the "propertyName" and "propertyValue" are ignored.
	Children []AlertFilterExpressionInput `json:"children"`
}

// GetPropertyName returns AlertFilterExpressionInput.PropertyName, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyName() *string { return v.PropertyName }

// GetPropertyValue returns AlertFilterExpressionInput.PropertyValue, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyValue() *string { return v.PropertyValue }

// GetPropertyValues returns AlertFilterExpressionInput.PropertyValues, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetPropertyValues() []*string { return v.PropertyValues }

// GetOperation returns AlertFilterExpressionInput.Operation, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetOperation() FilterOperation { return v.Operation }

// GetChildren returns AlertFilterExpressionInput.Children, and is useful for accessing the field via an interface.
func (v *AlertFilterExpressionInput) GetChildren() []AlertFilterExpressionInput { return v.Children }

type AlertFilterInput struct {
	// By Alert definition ID
	Id *string `json:"id"`
	// By user ID
	UserId *string `json:"userId"`
	// By Alert definition name
	Name *string `json:"name"`
	// By list of Alert definition severities
	Severities []AlertSeverity `json:"severities"`
	// By Alert definition enablement
	Enabled *bool `json:"enabled"`
	// By trigger status
	Triggered *bool `json:"triggered"`
	// By list of Entity IDs
	Entities []string `json:"entities"`
	// By list of Entity types
	EntityTypes []string `json:"entityTypes"`
	// By alert filter expression
	Filter *AlertFilterExpressionInput `json:"filter"`
	// By action configuration ID
	ActionConfigurationId *string `json:"actionConfigurationId"`
	// By list of condition types
	ConditionTypes []ConditionType `json:"conditionTypes"`
	// By swi-query expression
	Query *string `json:"query"`
}

// GetId returns AlertFilterInput.Id, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetId() *string { return v.Id }

// GetUserId returns AlertFilterInput.UserId, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetUserId() *string { return v.UserId }

// GetName returns AlertFilterInput.Name, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetName() *string { return v.Name }

// GetSeverities returns AlertFilterInput.Severities, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetSeverities() []AlertSeverity { return v.Severities }

// GetEnabled returns AlertFilterInput.Enabled, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEnabled() *bool { return v.Enabled }

// GetTriggered returns AlertFilterInput.Triggered, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetTriggered() *bool { return v.Triggered }

// GetEntities returns AlertFilterInput.Entities, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEntities() []string { return v.Entities }

// GetEntityTypes returns AlertFilterInput.EntityTypes, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetEntityTypes() []string { return v.EntityTypes }

// GetFilter returns AlertFilterInput.Filter, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetFilter() *AlertFilterExpressionInput { return v.Filter }

// GetActionConfigurationId returns AlertFilterInput.ActionConfigurationId, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetActionConfigurationId() *string { return v.ActionConfigurationId }

// GetConditionTypes returns AlertFilterInput.ConditionTypes, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetConditionTypes() []ConditionType { return v.ConditionTypes }

// GetQuery returns AlertFilterInput.Query, and is useful for accessing the field via an interface.
func (v *AlertFilterInput) GetQuery() *string { return v.Query }

// Alert Definition severities
type AlertSeverity string

const (
	AlertSeverityInfo     AlertSeverity = "INFO"
	AlertSeverityWarning  AlertSeverity = "WARNING"
	AlertSeverityCritical AlertSeverity = "CRITICAL"
)

// *DEPRECATED:* `ConditionType` is now described by metadata composed of `[AlertConditionScope]`, `AlertConditionDataSource` and `[AlertConditionDataType]`.
// Alert definition condition types
type ConditionType string

const (
	ConditionTypeEntityMetric     ConditionType = "ENTITY_METRIC"
	ConditionTypeStandaloneMetric ConditionType = "STANDALONE_METRIC"
	ConditionTypeLogQuery         ConditionType = "LOG_QUERY"
	ConditionTypeAnomalyEvents    ConditionType = "ANOMALY_EVENTS"
	ConditionTypeUnknown          ConditionType = "UNKNOWN"
)

// CreateAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type CreateAlertDefinitionAlertMutations struct {
	// Creates a new Alert definition and returns it on success, or null on error.
	// Requires JWT payload (*x-jwt-verified* header) with `org_id` claim containing Organization ID.
	CreateAlertDefinition *CreateAlertDefinitionAlertMutationsCreateAlertDefinition `json:"createAlertDefinition"`
}

// GetCreateAlertDefinition returns CreateAlertDefinitionAlertMutations.CreateAlertDefinition, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutations) GetCreateAlertDefinition() *CreateAlertDefinitionAlertMutationsCreateAlertDefinition {
	return v.CreateAlertDefinition
}

// CreateAlertDefinitionAlertMutationsCreateAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
type CreateAlertDefinitionAlertMutationsCreateAlertDefinition struct {
	// List of alert actions that shall be triggered in case of alert FIRING
	Actions []CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction `json:"actions"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	FlatCondition []CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description
	Description *string `json:"description"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Alert definition ID in UUID format
	Id string `json:"id"`
	// Alert definition name
	Name string `json:"name"`
	// Organization ID
	OrganizationId string `json:"organizationId"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
}

// GetActions returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetActions() []CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetFlatCondition returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetFlatCondition() []CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetId() string { return v.Id }

// GetName returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetName() string { return v.Name }

// GetOrganizationId returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns CreateAlertDefinitionAlertMutationsCreateAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
type CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction struct {
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
	// Type of a notification service
	Type string `json:"type"`
}

// GetConfigurationIds returns CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
}

// GetId returns CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionAlertMutationsCreateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// CreateAlertDefinitionResponse is returned by CreateAlertDefinition on success.
type CreateAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations CreateAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns CreateAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *CreateAlertDefinitionResponse) GetAlertMutations() CreateAlertDefinitionAlertMutations {
	return v.AlertMutations
}

type CreateDashboardInput struct {
	Name        string        `json:"name"`
	Description *string       `json:"description"`
	IsPrivate   *bool         `json:"isPrivate"`
	CategoryId  *string       `json:"categoryId"`
	Widgets     []WidgetInput `json:"widgets"`
	Layout      []LayoutInput `json:"layout"`
}

// GetName returns CreateDashboardInput.Name, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetName() string { return v.Name }

// GetDescription returns CreateDashboardInput.Description, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetDescription() *string { return v.Description }

// GetIsPrivate returns CreateDashboardInput.IsPrivate, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetIsPrivate() *bool { return v.IsPrivate }

// GetCategoryId returns CreateDashboardInput.CategoryId, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetCategoryId() *string { return v.CategoryId }

// GetWidgets returns CreateDashboardInput.Widgets, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetWidgets() []WidgetInput { return v.Widgets }

// GetLayout returns CreateDashboardInput.Layout, and is useful for accessing the field via an interface.
func (v *CreateDashboardInput) GetLayout() []LayoutInput { return v.Layout }

// CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse includes the requested fields of the GraphQL type CreateNotificationServiceConfigurationResponse.
type CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse struct {
	Code          string                                                                                                                                  `json:"code"`
	Success       bool                                                                                                                                    `json:"success"`
	Message       string                                                                                                                                  `json:"message"`
	Configuration *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService `json:"configuration"`
}

// GetCode returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse.Code, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse) GetCode() string {
	return v.Code
}

// GetSuccess returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse.Success, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse) GetSuccess() bool {
	return v.Success
}

// GetMessage returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse.Message, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse) GetMessage() string {
	return v.Message
}

// GetConfiguration returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse.Configuration, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse) GetConfiguration() *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService {
	return v.Configuration
}

// CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService includes the requested fields of the GraphQL type NotificationService.
type CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService struct {
	// The ID of the NotificationService.
	Id string `json:"id"`
	// The type of the NotificationService.
	Type string `json:"type"`
	// The title of the NotificationService.
	Title string `json:"title"`
	// The settings of the NotificationService.
	Settings *any `json:"settings"`
	// The created time of the NotificationService.
	CreatedAt time.Time `json:"createdAt"`
	// The createdBy user ID of the NotificationService.
	CreatedBy string `json:"createdBy"`
	// The description of the NotificationService.
	Description *string `json:"description"`
}

// GetId returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Id, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetId() string {
	return v.Id
}

// GetType returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Type, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetType() string {
	return v.Type
}

// GetTitle returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Title, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetTitle() string {
	return v.Title
}

// GetSettings returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Settings, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetSettings() *any {
	return v.Settings
}

// GetCreatedAt returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.CreatedAt, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetCreatedBy returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.CreatedBy, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetCreatedBy() string {
	return v.CreatedBy
}

// GetDescription returns CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService.Description, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponseConfigurationNotificationService) GetDescription() *string {
	return v.Description
}

// CreateNotificationResponse is returned by CreateNotification on success.
type CreateNotificationResponse struct {
	CreateNotificationServiceConfiguration CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse `json:"createNotificationServiceConfiguration"`
}

// GetCreateNotificationServiceConfiguration returns CreateNotificationResponse.CreateNotificationServiceConfiguration, and is useful for accessing the field via an interface.
func (v *CreateNotificationResponse) GetCreateNotificationServiceConfiguration() CreateNotificationCreateNotificationServiceConfigurationCreateNotificationServiceConfigurationResponse {
	return v.CreateNotificationServiceConfiguration
}

type CreateNotificationServiceConfigurationInput struct {
	Type        string  `json:"type"`
	Title       string  `json:"title"`
	Description *string `json:"description"`
	Settings    any     `json:"settings"`
}

// GetType returns CreateNotificationServiceConfigurationInput.Type, and is useful for accessing the field via an interface.
func (v *CreateNotificationServiceConfigurationInput) GetType() string { return v.Type }

// GetTitle returns CreateNotificationServiceConfigurationInput.Title, and is useful for accessing the field via an interface.
func (v *CreateNotificationServiceConfigurationInput) GetTitle() string { return v.Title }

// GetDescription returns CreateNotificationServiceConfigurationInput.Description, and is useful for accessing the field via an interface.
func (v *CreateNotificationServiceConfigurationInput) GetDescription() *string { return v.Description }

// GetSettings returns CreateNotificationServiceConfigurationInput.Settings, and is useful for accessing the field via an interface.
func (v *CreateNotificationServiceConfigurationInput) GetSettings() any { return v.Settings }

// DeleteAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type DeleteAlertDefinitionAlertMutations struct {
	// Deletes an Alert definition by ID and returns the ID on success, or null when no such Alert definition exists.
	// Requires JWT payload (*x-jwt-verified* header) with `org_id` claim containing Organization ID.
	DeleteAlertDefinition *string `json:"deleteAlertDefinition"`
}

// GetDeleteAlertDefinition returns DeleteAlertDefinitionAlertMutations.DeleteAlertDefinition, and is useful for accessing the field via an interface.
func (v *DeleteAlertDefinitionAlertMutations) GetDeleteAlertDefinition() *string {
	return v.DeleteAlertDefinition
}

// DeleteAlertDefinitionResponse is returned by DeleteAlertDefinition on success.
type DeleteAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations DeleteAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns DeleteAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *DeleteAlertDefinitionResponse) GetAlertMutations() DeleteAlertDefinitionAlertMutations {
	return v.AlertMutations
}

type DeleteDashboardInput struct {
	Id string `json:"id"`
}

// GetId returns DeleteDashboardInput.Id, and is useful for accessing the field via an interface.
func (v *DeleteDashboardInput) GetId() string { return v.Id }

// DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse includes the requested fields of the GraphQL type DeleteNotificationServiceConfigurationResponse.
type DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse struct {
	Success bool   `json:"success"`
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetSuccess returns DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse) GetSuccess() bool {
	return v.Success
}

// GetCode returns DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse.Code, and is useful for accessing the field via an interface.
func (v *DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse) GetCode() string {
	return v.Code
}

// GetMessage returns DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse.Message, and is useful for accessing the field via an interface.
func (v *DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse) GetMessage() string {
	return v.Message
}

// DeleteNotificationResponse is returned by DeleteNotification on success.
type DeleteNotificationResponse struct {
	DeleteNotificationServiceConfiguration *DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse `json:"deleteNotificationServiceConfiguration"`
}

// GetDeleteNotificationServiceConfiguration returns DeleteNotificationResponse.DeleteNotificationServiceConfiguration, and is useful for accessing the field via an interface.
func (v *DeleteNotificationResponse) GetDeleteNotificationServiceConfiguration() *DeleteNotificationDeleteNotificationServiceConfigurationDeleteNotificationServiceConfigurationResponse {
	return v.DeleteNotificationServiceConfiguration
}

type DeleteNotificationServiceConfigurationInput struct {
	Id string `json:"id"`
}

// GetId returns DeleteNotificationServiceConfigurationInput.Id, and is useful for accessing the field via an interface.
func (v *DeleteNotificationServiceConfigurationInput) GetId() string { return v.Id }

// Allowed entity filtering operators
type FilterOperation string

const (
	FilterOperationEq       FilterOperation = "EQ"
	FilterOperationNe       FilterOperation = "NE"
	FilterOperationGt       FilterOperation = "GT"
	FilterOperationGe       FilterOperation = "GE"
	FilterOperationLt       FilterOperation = "LT"
	FilterOperationLe       FilterOperation = "LE"
	FilterOperationContains FilterOperation = "CONTAINS"
	FilterOperationMatches  FilterOperation = "MATCHES"
	FilterOperationIn       FilterOperation = "IN"
	FilterOperationAnd      FilterOperation = "AND"
	FilterOperationOr       FilterOperation = "OR"
	FilterOperationNot      FilterOperation = "NOT"
	FilterOperationExists   FilterOperation = "EXISTS"
)

// GetAlertDefinitionsAlertQueries includes the requested fields of the GraphQL type AlertQueries.
type GetAlertDefinitionsAlertQueries struct {
	// Returns all Alert definitions with given Filter, Paging and Sorting.
	// Filtering can be performed either using dedicated fields in the `filter` input, or using a generic `filter.filter`
	// field. The latter one can be also used to filter Alert definitions with no configured actions/condition evaluations
	// using `propertyName: "actions:`/`propertyName: "conditionEvaluations"` and 'operation: EXISTS'.
	// Requires JWT payload (*x-jwt-verified* header) with `org_id` claim containing Organization ID.
	AlertDefinitions GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult `json:"alertDefinitions"`
}

// GetAlertDefinitions returns GetAlertDefinitionsAlertQueries.AlertDefinitions, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueries) GetAlertDefinitions() GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult {
	return v.AlertDefinitions
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult includes the requested fields of the GraphQL type AlertDefinitionsResult.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult struct {
	// List of Alert definitions
	AlertDefinitions []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition `json:"alertDefinitions"`
}

// GetAlertDefinitions returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult.AlertDefinitions, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResult) GetAlertDefinitions() []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition {
	return v.AlertDefinitions
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition struct {
	// List of alert actions that shall be triggered in case of alert FIRING
	Actions []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction `json:"actions"`
	// A flag indicating whether to send a notification when active alert returns to normal.
	TriggerResetActions bool `json:"triggerResetActions"`
	// Alert definition condition type
	ConditionType ConditionType `json:"conditionType"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	FlatCondition []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description
	Description *string `json:"description"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Alert definition ID in UUID format
	Id string `json:"id"`
	// Alert definition name
	Name string `json:"name"`
	// Organization ID
	OrganizationId string `json:"organizationId"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
	// Indication whether alert is triggered
	Triggered bool `json:"triggered"`
	// Time when the Alert definition was triggered in ISO-8601 date format (e.g. `2011-12-03T10:15:30Z`)
	TriggeredTime *string `json:"triggeredTime"`
	// List of targeted Entity types
	TargetEntityTypes []string `json:"targetEntityTypes"`
	// Information about any pending mutes on the Alert definition
	MuteInfo GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo `json:"muteInfo"`
	// User ID
	UserId string `json:"userId"`
}

// GetActions returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetActions() []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetTriggerResetActions returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TriggerResetActions, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggerResetActions() bool {
	return v.TriggerResetActions
}

// GetConditionType returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.ConditionType, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetConditionType() ConditionType {
	return v.ConditionType
}

// GetFlatCondition returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetFlatCondition() []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetId() string {
	return v.Id
}

// GetName returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetName() string {
	return v.Name
}

// GetOrganizationId returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// GetTriggered returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.Triggered, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggered() bool {
	return v.Triggered
}

// GetTriggeredTime returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TriggeredTime, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTriggeredTime() *string {
	return v.TriggeredTime
}

// GetTargetEntityTypes returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.TargetEntityTypes, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetTargetEntityTypes() []string {
	return v.TargetEntityTypes
}

// GetMuteInfo returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.MuteInfo, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetMuteInfo() GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo {
	return v.MuteInfo
}

// GetUserId returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition.UserId, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinition) GetUserId() string {
	return v.UserId
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction struct {
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
	// Type of a notification service
	Type string `json:"type"`
}

// GetConfigurationIds returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
	// List of named child condition node IDs.
	Links []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks `json:"links"`
	// Ordered list of expression nodes representing the flatten tree.
	// The first item is the tree root with named links using `operands`.
	Value *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode `json:"value"`
}

// GetId returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// GetLinks returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Links, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetLinks() []GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks {
	return v.Links
}

// GetValue returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression.Value, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpression) GetValue() *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode {
	return v.Value
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks includes the requested fields of the GraphQL type NamedLinks.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks struct {
	// Name of the link
	Name string `json:"name"`
	// List of linked node IDs
	Values []string `json:"values"`
}

// GetName returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Name, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetName() string {
	return v.Name
}

// GetValues returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks.Values, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionLinksNamedLinks) GetValues() []string {
	return v.Values
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode includes the requested fields of the GraphQL type FlatAlertConditionNode.
// The GraphQL type's documentation follows.
//
// See https://swicloud.atlassian.net/wiki/spaces/NIT/pages/2700936948/Data+Format+for+storing+alerts.
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode struct {
	// Entity metric field for `metricField` nodes
	FieldName *string `json:"fieldName"`
	// Operator for combining operands. Supported values:
	// - For aggregationOperator: `COUNT`, `MIN`, `MAX`, `AVG`, `SUM`, `LAST`
	// - For binaryOperator: `=`, `!=`, `>`, `<`, `>=`, `<=`
	// - For logicalOperator: `AND`, `OR`
	// - For unaryOperator: `!`
	Operator *string `json:"operator"`
	// Node (operator) type. Supported values:
	// - `aggregationOperator` (child of `binaryOperator`)
	// - `binaryOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	// - `constantValue` (root, or child of `aggregationOperator`, `binaryOperator`)
	// - `logicalOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	// - `metricField` (child of `binaryOperator`, `aggregationOperator`)
	// - `queryField` (child of `aggregationOperator`)
	// - `unaryOperator` (root, or child of `logicalOperator`, `unaryOperator`)
	Type string `json:"type"`
	// Query specification for `queryField` nodes.
	Query *string `json:"query"`
}

// GetFieldName returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.FieldName, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetFieldName() *string {
	return v.FieldName
}

// GetOperator returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Operator, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetOperator() *string {
	return v.Operator
}

// GetType returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Type, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetType() string {
	return v.Type
}

// GetQuery returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode.Query, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionFlatConditionFlatAlertConditionExpressionValueFlatAlertConditionNode) GetQuery() *string {
	return v.Query
}

// GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo includes the requested fields of the GraphQL type AlertDefinitionMuteInfo.
// The GraphQL type's documentation follows.
//
// Alert definitions can be muted for certain period of time or muted until resolved.
//
// If the muted is set to *true* and until attribute is not set meaning no notification will be sent until
// all of the evaluations are set to **OK** state or alert definition is reset
type GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo struct {
	// When muted no notifications are sent
	Muted bool `json:"muted"`
	// Time until the mute expires in ISO-8601 date format - `2011-12-03T10:15:30Z` or `null` - muted until resolved
	Until *string `json:"until"`
}

// GetMuted returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo.Muted, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo) GetMuted() bool {
	return v.Muted
}

// GetUntil returns GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo.Until, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsAlertQueriesAlertDefinitionsAlertDefinitionsResultAlertDefinitionsAlertDefinitionMuteInfo) GetUntil() *string {
	return v.Until
}

// GetAlertDefinitionsResponse is returned by GetAlertDefinitions on success.
type GetAlertDefinitionsResponse struct {
	// Queries related to Alerting.
	AlertQueries GetAlertDefinitionsAlertQueries `json:"alertQueries"`
}

// GetAlertQueries returns GetAlertDefinitionsResponse.AlertQueries, and is useful for accessing the field via an interface.
func (v *GetAlertDefinitionsResponse) GetAlertQueries() GetAlertDefinitionsAlertQueries {
	return v.AlertQueries
}

// GetNotificationResponse is returned by GetNotification on success.
type GetNotificationResponse struct {
	User GetNotificationUserAuthenticatedUser `json:"user"`
}

// GetUser returns GetNotificationResponse.User, and is useful for accessing the field via an interface.
func (v *GetNotificationResponse) GetUser() GetNotificationUserAuthenticatedUser { return v.User }

// GetNotificationUserAuthenticatedUser includes the requested fields of the GraphQL type AuthenticatedUser.
type GetNotificationUserAuthenticatedUser struct {
	CurrentOrganization GetNotificationUserAuthenticatedUserCurrentOrganization `json:"currentOrganization"`
}

// GetCurrentOrganization returns GetNotificationUserAuthenticatedUser.CurrentOrganization, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUser) GetCurrentOrganization() GetNotificationUserAuthenticatedUserCurrentOrganization {
	return v.CurrentOrganization
}

// GetNotificationUserAuthenticatedUserCurrentOrganization includes the requested fields of the GraphQL type Organization.
type GetNotificationUserAuthenticatedUserCurrentOrganization struct {
	NotificationServiceConfiguration GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService `json:"notificationServiceConfiguration"`
}

// GetNotificationServiceConfiguration returns GetNotificationUserAuthenticatedUserCurrentOrganization.NotificationServiceConfiguration, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUserCurrentOrganization) GetNotificationServiceConfiguration() GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService {
	return v.NotificationServiceConfiguration
}

// GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService includes the requested fields of the GraphQL type NotificationService.
type GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService struct {
	// The ID of the NotificationService.
	Id string `json:"id"`
	// The type of the NotificationService.
	Type string `json:"type"`
	// The title of the NotificationService.
	Title string `json:"title"`
	// The settings of the NotificationService.
	Settings *any `json:"settings"`
	// The created time of the NotificationService.
	CreatedAt time.Time `json:"createdAt"`
	// The createdBy user ID of the NotificationService.
	CreatedBy string `json:"createdBy"`
	// The description of the NotificationService.
	Description *string `json:"description"`
}

// GetId returns GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Id, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetId() string {
	return v.Id
}

// GetType returns GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Type, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetType() string {
	return v.Type
}

// GetTitle returns GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Title, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetTitle() string {
	return v.Title
}

// GetSettings returns GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Settings, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetSettings() *any {
	return v.Settings
}

// GetCreatedAt returns GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetCreatedBy returns GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.CreatedBy, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetCreatedBy() string {
	return v.CreatedBy
}

// GetDescription returns GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService.Description, and is useful for accessing the field via an interface.
func (v *GetNotificationUserAuthenticatedUserCurrentOrganizationNotificationServiceConfigurationNotificationService) GetDescription() *string {
	return v.Description
}

type LayoutInput struct {
	Id     string `json:"id"`
	X      int    `json:"x"`
	Y      int    `json:"y"`
	Width  int    `json:"width"`
	Height int    `json:"height"`
}

// GetId returns LayoutInput.Id, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetId() string { return v.Id }

// GetX returns LayoutInput.X, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetX() int { return v.X }

// GetY returns LayoutInput.Y, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetY() int { return v.Y }

// GetWidth returns LayoutInput.Width, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetWidth() int { return v.Width }

// GetHeight returns LayoutInput.Height, and is useful for accessing the field via an interface.
func (v *LayoutInput) GetHeight() int { return v.Height }

// Paging input for paginated queries. If not specified the first page of the results is returned and it will contain
// up to X items where X is a value configured in the system.
type PagingInput struct {
	// Fetch items that exist before this cursor. Cursor can be obtained from PageInfo data returned in previous query.
	Before *string `json:"before"`
	// Fetch items that exist after this cursor. Cursor can be obtained from PageInfo data returned in previous query.
	After *string `json:"after"`
	// Get first X items from the result. This value can be used alone or in combination with "after".
	// Other combinations are invalid and will lead to query error.
	First *int `json:"first"`
	// Get last X items from the result. This value can be used alone or in combination with "before".
	// Other combinations are invalid and will lead to query error.
	Last *int `json:"last"`
}

// GetBefore returns PagingInput.Before, and is useful for accessing the field via an interface.
func (v *PagingInput) GetBefore() *string { return v.Before }

// GetAfter returns PagingInput.After, and is useful for accessing the field via an interface.
func (v *PagingInput) GetAfter() *string { return v.After }

// GetFirst returns PagingInput.First, and is useful for accessing the field via an interface.
func (v *PagingInput) GetFirst() *int { return v.First }

// GetLast returns PagingInput.Last, and is useful for accessing the field via an interface.
func (v *PagingInput) GetLast() *int { return v.Last }

// Sort direction for query result sorting
type SortDirection string

const (
	SortDirectionAsc  SortDirection = "ASC"
	SortDirectionDesc SortDirection = "DESC"
)

// Query sort definition. Sort support multiple properties and two sort directions.
type SortInput struct {
	Sorts []SortItemInput `json:"sorts"`
}

// GetSorts returns SortInput.Sorts, and is useful for accessing the field via an interface.
func (v *SortInput) GetSorts() []SortItemInput { return v.Sorts }

// Single property sort definition.
type SortItemInput struct {
	PropertyName string         `json:"propertyName"`
	Direction    *SortDirection `json:"direction"`
}

// GetPropertyName returns SortItemInput.PropertyName, and is useful for accessing the field via an interface.
func (v *SortItemInput) GetPropertyName() string { return v.PropertyName }

// GetDirection returns SortItemInput.Direction, and is useful for accessing the field via an interface.
func (v *SortItemInput) GetDirection() *SortDirection { return v.Direction }

// UpdateAlertDefinitionAlertMutations includes the requested fields of the GraphQL type AlertMutations.
type UpdateAlertDefinitionAlertMutations struct {
	// Updates an Alert definition by ID and returns the alert on success, or null when no such Alert definition exists.
	// Requires JWT payload (*x-jwt-verified* header) with `org_id` claim containing Organization ID.
	UpdateAlertDefinition *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition `json:"updateAlertDefinition"`
}

// GetUpdateAlertDefinition returns UpdateAlertDefinitionAlertMutations.UpdateAlertDefinition, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutations) GetUpdateAlertDefinition() *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition {
	return v.UpdateAlertDefinition
}

// UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition includes the requested fields of the GraphQL type AlertDefinition.
type UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition struct {
	// List of alert actions that shall be triggered in case of alert FIRING
	Actions []UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction `json:"actions"`
	// Ordered list of condition nodes representing the flatten condition tree.
	// The first item is the tree root.
	FlatCondition []UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression `json:"flatCondition"`
	// Alert definition description
	Description *string `json:"description"`
	// Enabled whether Alert definition shall be evaluated
	Enabled bool `json:"enabled"`
	// Alert definition ID in UUID format
	Id string `json:"id"`
	// Information about any pending mutes on the Alert definition
	MuteInfo UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo `json:"muteInfo"`
	// Alert definition name
	Name string `json:"name"`
	// Organization ID
	OrganizationId string `json:"organizationId"`
	// Alert definition severity
	Severity AlertSeverity `json:"severity"`
	// Indication whether alert is triggered
	Triggered bool `json:"triggered"`
	// Time when the Alert definition was triggered in ISO-8601 date format (e.g. `2011-12-03T10:15:30Z`)
	TriggeredTime *string `json:"triggeredTime"`
	// List of targeted Entity types
	TargetEntityTypes []string `json:"targetEntityTypes"`
	// User ID
	UserId string `json:"userId"`
}

// GetActions returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Actions, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetActions() []UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction {
	return v.Actions
}

// GetFlatCondition returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.FlatCondition, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetFlatCondition() []UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression {
	return v.FlatCondition
}

// GetDescription returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Description, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetDescription() *string {
	return v.Description
}

// GetEnabled returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Enabled, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetEnabled() bool {
	return v.Enabled
}

// GetId returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Id, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetId() string { return v.Id }

// GetMuteInfo returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.MuteInfo, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetMuteInfo() UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo {
	return v.MuteInfo
}

// GetName returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Name, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetName() string { return v.Name }

// GetOrganizationId returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.OrganizationId, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetOrganizationId() string {
	return v.OrganizationId
}

// GetSeverity returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Severity, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetSeverity() AlertSeverity {
	return v.Severity
}

// GetTriggered returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.Triggered, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTriggered() bool {
	return v.Triggered
}

// GetTriggeredTime returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.TriggeredTime, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTriggeredTime() *string {
	return v.TriggeredTime
}

// GetTargetEntityTypes returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.TargetEntityTypes, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetTargetEntityTypes() []string {
	return v.TargetEntityTypes
}

// GetUserId returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition.UserId, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinition) GetUserId() string {
	return v.UserId
}

// UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction includes the requested fields of the GraphQL type AlertAction.
type UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction struct {
	// List of notification configuration IDs
	ConfigurationIds []string `json:"configurationIds"`
	// Type of a notification service
	Type string `json:"type"`
}

// GetConfigurationIds returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction.ConfigurationIds, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction) GetConfigurationIds() []string {
	return v.ConfigurationIds
}

// GetType returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction.Type, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionActionsAlertAction) GetType() string {
	return v.Type
}

// UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression includes the requested fields of the GraphQL type FlatAlertConditionExpression.
type UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression struct {
	// Alert Condition Expression Tree Node ID
	Id string `json:"id"`
}

// GetId returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression.Id, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionFlatConditionFlatAlertConditionExpression) GetId() string {
	return v.Id
}

// UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo includes the requested fields of the GraphQL type AlertDefinitionMuteInfo.
// The GraphQL type's documentation follows.
//
// Alert definitions can be muted for certain period of time or muted until resolved.
//
// If the muted is set to *true* and until attribute is not set meaning no notification will be sent until
// all of the evaluations are set to **OK** state or alert definition is reset
type UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo struct {
	// When muted no notifications are sent
	Muted bool `json:"muted"`
	// Time until the mute expires in ISO-8601 date format - `2011-12-03T10:15:30Z` or `null` - muted until resolved
	Until *string `json:"until"`
}

// GetMuted returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo.Muted, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo) GetMuted() bool {
	return v.Muted
}

// GetUntil returns UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo.Until, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionAlertMutationsUpdateAlertDefinitionMuteInfo) GetUntil() *string {
	return v.Until
}

// UpdateAlertDefinitionResponse is returned by UpdateAlertDefinition on success.
type UpdateAlertDefinitionResponse struct {
	// Mutations related to Alerting.
	AlertMutations UpdateAlertDefinitionAlertMutations `json:"alertMutations"`
}

// GetAlertMutations returns UpdateAlertDefinitionResponse.AlertMutations, and is useful for accessing the field via an interface.
func (v *UpdateAlertDefinitionResponse) GetAlertMutations() UpdateAlertDefinitionAlertMutations {
	return v.AlertMutations
}

type UpdateDashboardInput struct {
	Id          string        `json:"id"`
	Name        string        `json:"name"`
	Description *string       `json:"description"`
	IsPrivate   *bool         `json:"isPrivate"`
	CategoryId  *string       `json:"categoryId"`
	Widgets     []WidgetInput `json:"widgets"`
	Layout      []LayoutInput `json:"layout"`
}

// GetId returns UpdateDashboardInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetId() string { return v.Id }

// GetName returns UpdateDashboardInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetName() string { return v.Name }

// GetDescription returns UpdateDashboardInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetDescription() *string { return v.Description }

// GetIsPrivate returns UpdateDashboardInput.IsPrivate, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetIsPrivate() *bool { return v.IsPrivate }

// GetCategoryId returns UpdateDashboardInput.CategoryId, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetCategoryId() *string { return v.CategoryId }

// GetWidgets returns UpdateDashboardInput.Widgets, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetWidgets() []WidgetInput { return v.Widgets }

// GetLayout returns UpdateDashboardInput.Layout, and is useful for accessing the field via an interface.
func (v *UpdateDashboardInput) GetLayout() []LayoutInput { return v.Layout }

// UpdateNotificationResponse is returned by UpdateNotification on success.
type UpdateNotificationResponse struct {
	UpdateNotificationServiceConfiguration *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse `json:"updateNotificationServiceConfiguration"`
}

// GetUpdateNotificationServiceConfiguration returns UpdateNotificationResponse.UpdateNotificationServiceConfiguration, and is useful for accessing the field via an interface.
func (v *UpdateNotificationResponse) GetUpdateNotificationServiceConfiguration() *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse {
	return v.UpdateNotificationServiceConfiguration
}

type UpdateNotificationServiceConfigurationInput struct {
	Id          string  `json:"id"`
	Title       *string `json:"title"`
	Description *string `json:"description"`
	Settings    *any    `json:"settings"`
}

// GetId returns UpdateNotificationServiceConfigurationInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateNotificationServiceConfigurationInput) GetId() string { return v.Id }

// GetTitle returns UpdateNotificationServiceConfigurationInput.Title, and is useful for accessing the field via an interface.
func (v *UpdateNotificationServiceConfigurationInput) GetTitle() *string { return v.Title }

// GetDescription returns UpdateNotificationServiceConfigurationInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateNotificationServiceConfigurationInput) GetDescription() *string { return v.Description }

// GetSettings returns UpdateNotificationServiceConfigurationInput.Settings, and is useful for accessing the field via an interface.
func (v *UpdateNotificationServiceConfigurationInput) GetSettings() *any { return v.Settings }

// UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse includes the requested fields of the GraphQL type UpdateNotificationServiceConfigurationResponse.
type UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse struct {
	Code          string                                                                                                                                  `json:"code"`
	Success       bool                                                                                                                                    `json:"success"`
	Message       string                                                                                                                                  `json:"message"`
	Configuration *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService `json:"configuration"`
}

// GetCode returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse.Code, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse) GetCode() string {
	return v.Code
}

// GetSuccess returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse.Success, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse) GetSuccess() bool {
	return v.Success
}

// GetMessage returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse.Message, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse) GetMessage() string {
	return v.Message
}

// GetConfiguration returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse.Configuration, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponse) GetConfiguration() *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService {
	return v.Configuration
}

// UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService includes the requested fields of the GraphQL type NotificationService.
type UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService struct {
	// The ID of the NotificationService.
	Id string `json:"id"`
	// The type of the NotificationService.
	Type string `json:"type"`
	// The title of the NotificationService.
	Title string `json:"title"`
	// The settings of the NotificationService.
	Settings *any `json:"settings"`
	// The description of the NotificationService.
	Description *string `json:"description"`
}

// GetId returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Id, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetId() string {
	return v.Id
}

// GetType returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Type, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetType() string {
	return v.Type
}

// GetTitle returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Title, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetTitle() string {
	return v.Title
}

// GetSettings returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Settings, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetSettings() *any {
	return v.Settings
}

// GetDescription returns UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService.Description, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotificationServiceConfigurationUpdateNotificationServiceConfigurationResponseConfigurationNotificationService) GetDescription() *string {
	return v.Description
}

type WidgetInput struct {
	Id         string  `json:"id"`
	Title      *string `json:"title"`
	Type       string  `json:"type"`
	Properties *any    `json:"properties"`
}

// GetId returns WidgetInput.Id, and is useful for accessing the field via an interface.
func (v *WidgetInput) GetId() string { return v.Id }

// GetTitle returns WidgetInput.Title, and is useful for accessing the field via an interface.
func (v *WidgetInput) GetTitle() *string { return v.Title }

// GetType returns WidgetInput.Type, and is useful for accessing the field via an interface.
func (v *WidgetInput) GetType() string { return v.Type }

// GetProperties returns WidgetInput.Properties, and is useful for accessing the field via an interface.
func (v *WidgetInput) GetProperties() *any { return v.Properties }

// __CreateAlertDefinitionInput is used internally by genqlient
type __CreateAlertDefinitionInput struct {
	Definition AlertDefinitionInput `json:"definition"`
}

// GetDefinition returns __CreateAlertDefinitionInput.Definition, and is useful for accessing the field via an interface.
func (v *__CreateAlertDefinitionInput) GetDefinition() AlertDefinitionInput { return v.Definition }

// __CreateNotificationInput is used internally by genqlient
type __CreateNotificationInput struct {
	Configuration CreateNotificationServiceConfigurationInput `json:"configuration"`
}

// GetConfiguration returns __CreateNotificationInput.Configuration, and is useful for accessing the field via an interface.
func (v *__CreateNotificationInput) GetConfiguration() CreateNotificationServiceConfigurationInput {
	return v.Configuration
}

// __DeleteAlertDefinitionInput is used internally by genqlient
type __DeleteAlertDefinitionInput struct {
	DeleteAlertDefinitionId string `json:"deleteAlertDefinitionId"`
}

// GetDeleteAlertDefinitionId returns __DeleteAlertDefinitionInput.DeleteAlertDefinitionId, and is useful for accessing the field via an interface.
func (v *__DeleteAlertDefinitionInput) GetDeleteAlertDefinitionId() string {
	return v.DeleteAlertDefinitionId
}

// __DeleteNotificationInput is used internally by genqlient
type __DeleteNotificationInput struct {
	Input DeleteNotificationServiceConfigurationInput `json:"input"`
}

// GetInput returns __DeleteNotificationInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteNotificationInput) GetInput() DeleteNotificationServiceConfigurationInput {
	return v.Input
}

// __GetAlertDefinitionsInput is used internally by genqlient
type __GetAlertDefinitionsInput struct {
	Filter AlertFilterInput `json:"filter"`
	Paging *PagingInput     `json:"paging"`
	SortBy *SortInput       `json:"sortBy"`
}

// GetFilter returns __GetAlertDefinitionsInput.Filter, and is useful for accessing the field via an interface.
func (v *__GetAlertDefinitionsInput) GetFilter() AlertFilterInput { return v.Filter }

// GetPaging returns __GetAlertDefinitionsInput.Paging, and is useful for accessing the field via an interface.
func (v *__GetAlertDefinitionsInput) GetPaging() *PagingInput { return v.Paging }

// GetSortBy returns __GetAlertDefinitionsInput.SortBy, and is useful for accessing the field via an interface.
func (v *__GetAlertDefinitionsInput) GetSortBy() *SortInput { return v.SortBy }

// __GetNotificationInput is used internally by genqlient
type __GetNotificationInput struct {
	ConfigurationId   string `json:"configurationId"`
	ConfigurationType string `json:"configurationType"`
}

// GetConfigurationId returns __GetNotificationInput.ConfigurationId, and is useful for accessing the field via an interface.
func (v *__GetNotificationInput) GetConfigurationId() string { return v.ConfigurationId }

// GetConfigurationType returns __GetNotificationInput.ConfigurationType, and is useful for accessing the field via an interface.
func (v *__GetNotificationInput) GetConfigurationType() string { return v.ConfigurationType }

// __UpdateAlertDefinitionInput is used internally by genqlient
type __UpdateAlertDefinitionInput struct {
	Definition              AlertDefinitionInput `json:"definition"`
	UpdateAlertDefinitionId string               `json:"updateAlertDefinitionId"`
}

// GetDefinition returns __UpdateAlertDefinitionInput.Definition, and is useful for accessing the field via an interface.
func (v *__UpdateAlertDefinitionInput) GetDefinition() AlertDefinitionInput { return v.Definition }

// GetUpdateAlertDefinitionId returns __UpdateAlertDefinitionInput.UpdateAlertDefinitionId, and is useful for accessing the field via an interface.
func (v *__UpdateAlertDefinitionInput) GetUpdateAlertDefinitionId() string {
	return v.UpdateAlertDefinitionId
}

// __UpdateNotificationInput is used internally by genqlient
type __UpdateNotificationInput struct {
	Configuration UpdateNotificationServiceConfigurationInput `json:"configuration"`
}

// GetConfiguration returns __UpdateNotificationInput.Configuration, and is useful for accessing the field via an interface.
func (v *__UpdateNotificationInput) GetConfiguration() UpdateNotificationServiceConfigurationInput {
	return v.Configuration
}

// __createDashboardInput is used internally by genqlient
type __createDashboardInput struct {
	Input CreateDashboardInput `json:"input"`
}

// GetInput returns __createDashboardInput.Input, and is useful for accessing the field via an interface.
func (v *__createDashboardInput) GetInput() CreateDashboardInput { return v.Input }

// __deleteDashboardInput is used internally by genqlient
type __deleteDashboardInput struct {
	Input DeleteDashboardInput `json:"input"`
}

// GetInput returns __deleteDashboardInput.Input, and is useful for accessing the field via an interface.
func (v *__deleteDashboardInput) GetInput() DeleteDashboardInput { return v.Input }

// __getDashboardByIdInput is used internally by genqlient
type __getDashboardByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __getDashboardByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__getDashboardByIdInput) GetId() string { return v.Id }

// __updateDashboardInput is used internally by genqlient
type __updateDashboardInput struct {
	Input UpdateDashboardInput `json:"input"`
}

// GetInput returns __updateDashboardInput.Input, and is useful for accessing the field via an interface.
func (v *__updateDashboardInput) GetInput() UpdateDashboardInput { return v.Input }

// createDashboardCreateDashboardCreateDashboardResponse includes the requested fields of the GraphQL type CreateDashboardResponse.
type createDashboardCreateDashboardCreateDashboardResponse struct {
	Code      string                                                          `json:"code"`
	Success   bool                                                            `json:"success"`
	Message   string                                                          `json:"message"`
	Dashboard *createDashboardCreateDashboardCreateDashboardResponseDashboard `json:"dashboard"`
}

// GetCode returns createDashboardCreateDashboardCreateDashboardResponse.Code, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponse) GetCode() string { return v.Code }

// GetSuccess returns createDashboardCreateDashboardCreateDashboardResponse.Success, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponse) GetSuccess() bool { return v.Success }

// GetMessage returns createDashboardCreateDashboardCreateDashboardResponse.Message, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponse) GetMessage() string { return v.Message }

// GetDashboard returns createDashboardCreateDashboardCreateDashboardResponse.Dashboard, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponse) GetDashboard() *createDashboardCreateDashboardCreateDashboardResponseDashboard {
	return v.Dashboard
}

// createDashboardCreateDashboardCreateDashboardResponseDashboard includes the requested fields of the GraphQL type Dashboard.
type createDashboardCreateDashboardCreateDashboardResponseDashboard struct {
	Id              string                                                                        `json:"id"`
	SystemReference *string                                                                       `json:"systemReference"`
	Owner           *createDashboardCreateDashboardCreateDashboardResponseDashboardOwner          `json:"owner"`
	Widgets         []createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget `json:"widgets"`
	Layout          []createDashboardCreateDashboardCreateDashboardResponseDashboardLayout        `json:"layout"`
	CreatedAt       time.Time                                                                     `json:"createdAt"`
	UpdatedAt       time.Time                                                                     `json:"updatedAt"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetId() string { return v.Id }

// GetSystemReference returns createDashboardCreateDashboardCreateDashboardResponseDashboard.SystemReference, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetSystemReference() *string {
	return v.SystemReference
}

// GetOwner returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Owner, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetOwner() *createDashboardCreateDashboardCreateDashboardResponseDashboardOwner {
	return v.Owner
}

// GetWidgets returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Widgets, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetWidgets() []createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget {
	return v.Widgets
}

// GetLayout returns createDashboardCreateDashboardCreateDashboardResponseDashboard.Layout, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetLayout() []createDashboardCreateDashboardCreateDashboardResponseDashboardLayout {
	return v.Layout
}

// GetCreatedAt returns createDashboardCreateDashboardCreateDashboardResponseDashboard.CreatedAt, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns createDashboardCreateDashboardCreateDashboardResponseDashboard.UpdatedAt, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboard) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// createDashboardCreateDashboardCreateDashboardResponseDashboardLayout includes the requested fields of the GraphQL type Layout.
type createDashboardCreateDashboardCreateDashboardResponseDashboardLayout struct {
	Id     string `json:"id"`
	X      int    `json:"x"`
	Y      int    `json:"y"`
	Width  int    `json:"width"`
	Height int    `json:"height"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetId() string {
	return v.Id
}

// GetX returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.X, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetX() int { return v.X }

// GetY returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.Y, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetY() int { return v.Y }

// GetWidth returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.Width, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetWidth() int {
	return v.Width
}

// GetHeight returns createDashboardCreateDashboardCreateDashboardResponseDashboardLayout.Height, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardLayout) GetHeight() int {
	return v.Height
}

// createDashboardCreateDashboardCreateDashboardResponseDashboardOwner includes the requested fields of the GraphQL type DashboardOwner.
type createDashboardCreateDashboardCreateDashboardResponseDashboardOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboardOwner.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardOwner) GetId() string {
	return v.Id
}

// GetName returns createDashboardCreateDashboardCreateDashboardResponseDashboardOwner.Name, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardOwner) GetName() string {
	return v.Name
}

// createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget includes the requested fields of the GraphQL type Widget.
type createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget struct {
	Id   string `json:"id"`
	Type string `json:"type"`
}

// GetId returns createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget.Id, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget) GetId() string {
	return v.Id
}

// GetType returns createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget.Type, and is useful for accessing the field via an interface.
func (v *createDashboardCreateDashboardCreateDashboardResponseDashboardWidgetsWidget) GetType() string {
	return v.Type
}

// createDashboardResponse is returned by createDashboard on success.
type createDashboardResponse struct {
	CreateDashboard createDashboardCreateDashboardCreateDashboardResponse `json:"createDashboard"`
}

// GetCreateDashboard returns createDashboardResponse.CreateDashboard, and is useful for accessing the field via an interface.
func (v *createDashboardResponse) GetCreateDashboard() createDashboardCreateDashboardCreateDashboardResponse {
	return v.CreateDashboard
}

// deleteDashboardDeleteDashboardDeleteDashboardResponse includes the requested fields of the GraphQL type DeleteDashboardResponse.
type deleteDashboardDeleteDashboardDeleteDashboardResponse struct {
	Code    string `json:"code"`
	Success bool   `json:"success"`
	Message string `json:"message"`
}

// GetCode returns deleteDashboardDeleteDashboardDeleteDashboardResponse.Code, and is useful for accessing the field via an interface.
func (v *deleteDashboardDeleteDashboardDeleteDashboardResponse) GetCode() string { return v.Code }

// GetSuccess returns deleteDashboardDeleteDashboardDeleteDashboardResponse.Success, and is useful for accessing the field via an interface.
func (v *deleteDashboardDeleteDashboardDeleteDashboardResponse) GetSuccess() bool { return v.Success }

// GetMessage returns deleteDashboardDeleteDashboardDeleteDashboardResponse.Message, and is useful for accessing the field via an interface.
func (v *deleteDashboardDeleteDashboardDeleteDashboardResponse) GetMessage() string { return v.Message }

// deleteDashboardResponse is returned by deleteDashboard on success.
type deleteDashboardResponse struct {
	DeleteDashboard deleteDashboardDeleteDashboardDeleteDashboardResponse `json:"deleteDashboard"`
}

// GetDeleteDashboard returns deleteDashboardResponse.DeleteDashboard, and is useful for accessing the field via an interface.
func (v *deleteDashboardResponse) GetDeleteDashboard() deleteDashboardDeleteDashboardDeleteDashboardResponse {
	return v.DeleteDashboard
}

// getDashboardByIdDashboardsDashboardQueries includes the requested fields of the GraphQL type DashboardQueries.
type getDashboardByIdDashboardsDashboardQueries struct {
	ById *getDashboardByIdDashboardsDashboardQueriesByIdDashboard `json:"byId"`
}

// GetById returns getDashboardByIdDashboardsDashboardQueries.ById, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueries) GetById() *getDashboardByIdDashboardsDashboardQueriesByIdDashboard {
	return v.ById
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboard includes the requested fields of the GraphQL type Dashboard.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboard struct {
	Id              string                                                                 `json:"id"`
	Name            string                                                                 `json:"name"`
	IsPrivate       *bool                                                                  `json:"isPrivate"`
	SystemReference *string                                                                `json:"systemReference"`
	CreatedAt       time.Time                                                              `json:"createdAt"`
	UpdatedAt       time.Time                                                              `json:"updatedAt"`
	Category        *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory       `json:"category"`
	Owner           *getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner          `json:"owner"`
	Widgets         []getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget `json:"widgets"`
	Layout          []getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout        `json:"layout"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetId() string { return v.Id }

// GetName returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Name, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetName() string { return v.Name }

// GetIsPrivate returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.IsPrivate, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetIsPrivate() *bool {
	return v.IsPrivate
}

// GetSystemReference returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.SystemReference, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetSystemReference() *string {
	return v.SystemReference
}

// GetCreatedAt returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// GetCategory returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Category, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetCategory() *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory {
	return v.Category
}

// GetOwner returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Owner, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetOwner() *getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner {
	return v.Owner
}

// GetWidgets returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Widgets, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetWidgets() []getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget {
	return v.Widgets
}

// GetLayout returns getDashboardByIdDashboardsDashboardQueriesByIdDashboard.Layout, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboard) GetLayout() []getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout {
	return v.Layout
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory includes the requested fields of the GraphQL type DashboardCategory.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory struct {
	Id        string                                                                `json:"id"`
	Name      string                                                                `json:"name"`
	Type      string                                                                `json:"type"`
	Owner     *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner `json:"owner"`
	CreatedAt time.Time                                                             `json:"createdAt"`
	UpdatedAt time.Time                                                             `json:"updatedAt"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetId() string { return v.Id }

// GetName returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.Name, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetName() string {
	return v.Name
}

// GetType returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.Type, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetType() string {
	return v.Type
}

// GetOwner returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.Owner, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetOwner() *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner {
	return v.Owner
}

// GetCreatedAt returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategory) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner includes the requested fields of the GraphQL type CategoryOwner.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner) GetId() string {
	return v.Id
}

// GetName returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner.Name, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardCategoryOwner) GetName() string {
	return v.Name
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout includes the requested fields of the GraphQL type Layout.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout struct {
	Id     string `json:"id"`
	X      int    `json:"x"`
	Y      int    `json:"y"`
	Height int    `json:"height"`
	Width  int    `json:"width"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetId() string { return v.Id }

// GetX returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.X, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetX() int { return v.X }

// GetY returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.Y, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetY() int { return v.Y }

// GetHeight returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.Height, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetHeight() int {
	return v.Height
}

// GetWidth returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout.Width, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardLayout) GetWidth() int {
	return v.Width
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner includes the requested fields of the GraphQL type DashboardOwner.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner) GetId() string { return v.Id }

// GetName returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner.Name, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardOwner) GetName() string {
	return v.Name
}

// getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget includes the requested fields of the GraphQL type Widget.
type getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget struct {
	Id         string `json:"id"`
	Type       string `json:"type"`
	Properties *any   `json:"properties"`
}

// GetId returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget.Id, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget) GetId() string {
	return v.Id
}

// GetType returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget.Type, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget) GetType() string {
	return v.Type
}

// GetProperties returns getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget.Properties, and is useful for accessing the field via an interface.
func (v *getDashboardByIdDashboardsDashboardQueriesByIdDashboardWidgetsWidget) GetProperties() *any {
	return v.Properties
}

// getDashboardByIdResponse is returned by getDashboardById on success.
type getDashboardByIdResponse struct {
	Dashboards *getDashboardByIdDashboardsDashboardQueries `json:"dashboards"`
}

// GetDashboards returns getDashboardByIdResponse.Dashboards, and is useful for accessing the field via an interface.
func (v *getDashboardByIdResponse) GetDashboards() *getDashboardByIdDashboardsDashboardQueries {
	return v.Dashboards
}

// updateDashboardResponse is returned by updateDashboard on success.
type updateDashboardResponse struct {
	UpdateDashboard updateDashboardUpdateDashboardUpdateDashboardResponse `json:"updateDashboard"`
}

// GetUpdateDashboard returns updateDashboardResponse.UpdateDashboard, and is useful for accessing the field via an interface.
func (v *updateDashboardResponse) GetUpdateDashboard() updateDashboardUpdateDashboardUpdateDashboardResponse {
	return v.UpdateDashboard
}

// updateDashboardUpdateDashboardUpdateDashboardResponse includes the requested fields of the GraphQL type UpdateDashboardResponse.
type updateDashboardUpdateDashboardUpdateDashboardResponse struct {
	Code      string                                                          `json:"code"`
	Success   bool                                                            `json:"success"`
	Message   string                                                          `json:"message"`
	Dashboard *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard `json:"dashboard"`
}

// GetCode returns updateDashboardUpdateDashboardUpdateDashboardResponse.Code, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponse) GetCode() string { return v.Code }

// GetSuccess returns updateDashboardUpdateDashboardUpdateDashboardResponse.Success, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponse) GetSuccess() bool { return v.Success }

// GetMessage returns updateDashboardUpdateDashboardUpdateDashboardResponse.Message, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponse) GetMessage() string { return v.Message }

// GetDashboard returns updateDashboardUpdateDashboardUpdateDashboardResponse.Dashboard, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponse) GetDashboard() *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard {
	return v.Dashboard
}

// updateDashboardUpdateDashboardUpdateDashboardResponseDashboard includes the requested fields of the GraphQL type Dashboard.
type updateDashboardUpdateDashboardUpdateDashboardResponseDashboard struct {
	Id        string                                                                        `json:"id"`
	Owner     *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner          `json:"owner"`
	Widgets   []updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget `json:"widgets"`
	Layout    []updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout        `json:"layout"`
	CreatedAt time.Time                                                                     `json:"createdAt"`
	UpdatedAt time.Time                                                                     `json:"updatedAt"`
}

// GetId returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.Id, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetId() string { return v.Id }

// GetOwner returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.Owner, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetOwner() *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner {
	return v.Owner
}

// GetWidgets returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.Widgets, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetWidgets() []updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget {
	return v.Widgets
}

// GetLayout returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.Layout, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetLayout() []updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout {
	return v.Layout
}

// GetCreatedAt returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.CreatedAt, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetCreatedAt() time.Time {
	return v.CreatedAt
}

// GetUpdatedAt returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboard.UpdatedAt, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboard) GetUpdatedAt() time.Time {
	return v.UpdatedAt
}

// updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout includes the requested fields of the GraphQL type Layout.
type updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout struct {
	Id     string `json:"id"`
	X      int    `json:"x"`
	Y      int    `json:"y"`
	Width  int    `json:"width"`
	Height int    `json:"height"`
}

// GetId returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.Id, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetId() string {
	return v.Id
}

// GetX returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.X, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetX() int { return v.X }

// GetY returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.Y, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetY() int { return v.Y }

// GetWidth returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.Width, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetWidth() int {
	return v.Width
}

// GetHeight returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout.Height, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardLayout) GetHeight() int {
	return v.Height
}

// updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner includes the requested fields of the GraphQL type DashboardOwner.
type updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner.Id, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner) GetId() string {
	return v.Id
}

// GetName returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner.Name, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardOwner) GetName() string {
	return v.Name
}

// updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget includes the requested fields of the GraphQL type Widget.
type updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget struct {
	Id   string `json:"id"`
	Type string `json:"type"`
}

// GetId returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget.Id, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget) GetId() string {
	return v.Id
}

// GetType returns updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget.Type, and is useful for accessing the field via an interface.
func (v *updateDashboardUpdateDashboardUpdateDashboardResponseDashboardWidgetsWidget) GetType() string {
	return v.Type
}

func CreateAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	definition AlertDefinitionInput,
) (*CreateAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "CreateAlertDefinition",
		Query: `
mutation CreateAlertDefinition ($definition: AlertDefinitionInput!) {
	alertMutations {
		createAlertDefinition(definition: $definition) {
			actions {
				configurationIds
				type
			}
			flatCondition {
				id
			}
			description
			enabled
			id
			name
			organizationId
			severity
		}
	}
}
`,
		Variables: &__CreateAlertDefinitionInput{
			Definition: definition,
		},
	}
	var err error

	var data CreateAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateNotification(
	ctx context.Context,
	client graphql.Client,
	configuration CreateNotificationServiceConfigurationInput,
) (*CreateNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "CreateNotification",
		Query: `
mutation CreateNotification ($configuration: createNotificationServiceConfigurationInput!) {
	createNotificationServiceConfiguration(configuration: $configuration) {
		code
		success
		message
		configuration {
			id
			type
			title
			settings
			createdAt
			createdBy
			description
		}
	}
}
`,
		Variables: &__CreateNotificationInput{
			Configuration: configuration,
		},
	}
	var err error

	var data CreateNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	deleteAlertDefinitionId string,
) (*DeleteAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteAlertDefinition",
		Query: `
mutation DeleteAlertDefinition ($deleteAlertDefinitionId: ID!) {
	alertMutations {
		deleteAlertDefinition(id: $deleteAlertDefinitionId)
	}
}
`,
		Variables: &__DeleteAlertDefinitionInput{
			DeleteAlertDefinitionId: deleteAlertDefinitionId,
		},
	}
	var err error

	var data DeleteAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteNotification(
	ctx context.Context,
	client graphql.Client,
	input DeleteNotificationServiceConfigurationInput,
) (*DeleteNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteNotification",
		Query: `
mutation DeleteNotification ($input: DeleteNotificationServiceConfigurationInput!) {
	deleteNotificationServiceConfiguration(input: $input) {
		success
		code
		message
	}
}
`,
		Variables: &__DeleteNotificationInput{
			Input: input,
		},
	}
	var err error

	var data DeleteNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetAlertDefinitions(
	ctx context.Context,
	client graphql.Client,
	filter AlertFilterInput,
	paging *PagingInput,
	sortBy *SortInput,
) (*GetAlertDefinitionsResponse, error) {
	req := &graphql.Request{
		OpName: "GetAlertDefinitions",
		Query: `
query GetAlertDefinitions ($filter: AlertFilterInput!, $paging: PagingInput, $sortBy: SortInput) {
	alertQueries {
		alertDefinitions(filter: $filter, paging: $paging, sortBy: $sortBy) {
			alertDefinitions {
				actions {
					configurationIds
					type
				}
				triggerResetActions
				conditionType
				flatCondition {
					id
					links {
						name
						values
					}
					value {
						fieldName
						operator
						type
						query
					}
				}
				description
				enabled
				id
				name
				organizationId
				severity
				triggered
				triggeredTime
				targetEntityTypes
				muteInfo {
					muted
					until
				}
				userId
			}
		}
	}
}
`,
		Variables: &__GetAlertDefinitionsInput{
			Filter: filter,
			Paging: paging,
			SortBy: sortBy,
		},
	}
	var err error

	var data GetAlertDefinitionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetNotification(
	ctx context.Context,
	client graphql.Client,
	configurationId string,
	configurationType string,
) (*GetNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "GetNotification",
		Query: `
query GetNotification ($configurationId: String!, $configurationType: String!) {
	user {
		currentOrganization {
			notificationServiceConfiguration(configurationId: $configurationId, configurationType: $configurationType) {
				id
				type
				title
				settings
				createdAt
				createdBy
				description
			}
		}
	}
}
`,
		Variables: &__GetNotificationInput{
			ConfigurationId:   configurationId,
			ConfigurationType: configurationType,
		},
	}
	var err error

	var data GetNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateAlertDefinition(
	ctx context.Context,
	client graphql.Client,
	definition AlertDefinitionInput,
	updateAlertDefinitionId string,
) (*UpdateAlertDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateAlertDefinition",
		Query: `
mutation UpdateAlertDefinition ($definition: AlertDefinitionInput!, $updateAlertDefinitionId: ID!) {
	alertMutations {
		updateAlertDefinition(definition: $definition, id: $updateAlertDefinitionId) {
			actions {
				configurationIds
				type
			}
			flatCondition {
				id
			}
			description
			enabled
			id
			muteInfo {
				muted
				until
			}
			name
			organizationId
			severity
			triggered
			triggeredTime
			targetEntityTypes
			userId
		}
	}
}
`,
		Variables: &__UpdateAlertDefinitionInput{
			Definition:              definition,
			UpdateAlertDefinitionId: updateAlertDefinitionId,
		},
	}
	var err error

	var data UpdateAlertDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateNotification(
	ctx context.Context,
	client graphql.Client,
	configuration UpdateNotificationServiceConfigurationInput,
) (*UpdateNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateNotification",
		Query: `
mutation UpdateNotification ($configuration: UpdateNotificationServiceConfigurationInput!) {
	updateNotificationServiceConfiguration(input: $configuration) {
		code
		success
		message
		configuration {
			id
			type
			title
			settings
			description
		}
	}
}
`,
		Variables: &__UpdateNotificationInput{
			Configuration: configuration,
		},
	}
	var err error

	var data UpdateNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func createDashboard(
	ctx context.Context,
	client graphql.Client,
	input CreateDashboardInput,
) (*createDashboardResponse, error) {
	req := &graphql.Request{
		OpName: "createDashboard",
		Query: `
mutation createDashboard ($input: CreateDashboardInput!) {
	createDashboard(input: $input) {
		code
		success
		message
		dashboard {
			id
			systemReference
			owner {
				id
				name
			}
			widgets {
				id
				type
			}
			layout {
				id
				x
				y
				width
				height
			}
			createdAt
			updatedAt
		}
	}
}
`,
		Variables: &__createDashboardInput{
			Input: input,
		},
	}
	var err error

	var data createDashboardResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func deleteDashboard(
	ctx context.Context,
	client graphql.Client,
	input DeleteDashboardInput,
) (*deleteDashboardResponse, error) {
	req := &graphql.Request{
		OpName: "deleteDashboard",
		Query: `
mutation deleteDashboard ($input: DeleteDashboardInput!) {
	deleteDashboard(input: $input) {
		code
		success
		message
	}
}
`,
		Variables: &__deleteDashboardInput{
			Input: input,
		},
	}
	var err error

	var data deleteDashboardResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func getDashboardById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*getDashboardByIdResponse, error) {
	req := &graphql.Request{
		OpName: "getDashboardById",
		Query: `
query getDashboardById ($id: ID!) {
	dashboards {
		byId(id: $id) {
			id
			name
			isPrivate
			systemReference
			createdAt
			updatedAt
			category {
				id
				name
				type
				owner {
					id
					name
				}
				createdAt
				updatedAt
			}
			owner {
				id
				name
			}
			widgets {
				id
				type
				properties
			}
			layout {
				id
				x
				y
				height
				width
			}
		}
	}
}
`,
		Variables: &__getDashboardByIdInput{
			Id: id,
		},
	}
	var err error

	var data getDashboardByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func updateDashboard(
	ctx context.Context,
	client graphql.Client,
	input UpdateDashboardInput,
) (*updateDashboardResponse, error) {
	req := &graphql.Request{
		OpName: "updateDashboard",
		Query: `
mutation updateDashboard ($input: UpdateDashboardInput!) {
	updateDashboard(input: $input) {
		code
		success
		message
		dashboard {
			id
			owner {
				id
				name
			}
			widgets {
				id
				type
			}
			layout {
				id
				x
				y
				width
				height
			}
			createdAt
			updatedAt
		}
	}
}
`,
		Variables: &__updateDashboardInput{
			Input: input,
		},
	}
	var err error

	var data updateDashboardResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
